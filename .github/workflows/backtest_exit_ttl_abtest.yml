name: Exit/TTL A-B (pinned)

on:
  workflow_dispatch:
    inputs:
      CODEPACK_ZIP:
        description: "Path to code pack zip (repo root)"
        required: true
        default: "trade_v1.1.4.zip"
      CSV_GLOB:
        description: "Glob for CSV under data/ or tmp/data"
        required: true
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
      TTL_A:
        description: "TTL for run A"
        required: true
        default: "1"
      TTL_B:
        description: "TTL for run B"
        required: true
        default: "5000"

jobs:
  abtest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901b5b5b1630b4b23b5b2ac60a8a6e3f2

      - name: Setup Python 3.11 (pinned)
        uses: actions/setup-python@a26af69be951a213e376a39fc6824e9f5b089bc5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Prepare workspace
        shell: bash
        env:
          CODEPACK_ZIP: ${{ github.event.inputs.CODEPACK_ZIP }}
          CSV_GLOB: ${{ github.event.inputs.CSV_GLOB }}
        run: |
          set -euo pipefail
          mkdir -p _out_4u tmp/trade tmp/data tmp/trade/conf
          echo "[prep] unzip ${CODEPACK_ZIP} -> tmp/trade/"
          unzip -o "${CODEPACK_ZIP}" -d tmp/trade >/dev/null
          # pick a csv and write to _out_4u/CSV_PATH.txt
          python - <<'PY'
          import os,glob,sys,pathlib
          pat=os.environ.get("CSV_GLOB","**/*.csv")
          cand=sorted(glob.glob("tmp/data/"+pat,recursive=True)) or \
               sorted(glob.glob("data/"+pat,recursive=True))
          if not cand:
              print("No CSV found under tmp/data or data", file=sys.stderr)
              sys.exit(2)
          pathlib.Path("_out_4u/CSV_PATH.txt").write_text(cand[0])
          print("[prep] CSV selected:", cand[0])
          PY

      - name: Patch TTL in config (A)
        shell: bash
        env:
          TTL: ${{ github.event.inputs.TTL_A }}
        run: |
          set -euo pipefail
          CONF=tmp/trade/conf/config.effective.yml
          mkdir -p tmp/trade/conf
          if [ ! -f "$CONF" ]; then echo "exit: { ttl: 0 }" > "$CONF"; fi
          python - <<'PY'
          import os,yaml,pathlib
          p=pathlib.Path("tmp/trade/conf/config.effective.yml")
          try:
              cfg=yaml.safe_load(p.read_text()) or {}
          except Exception:
              cfg={}
          cfg.setdefault('exit',{})
          cfg['exit']['ttl']=int(os.environ.get('TTL','0'))
          p.write_text(yaml.safe_dump(cfg, sort_keys=False))
          print("[patchA] ttl ->", cfg['exit']['ttl'])
          PY

      - name: Run A (TTL=A)
        shell: bash
        run: |
          set -euo pipefail
          DAT=$(cat _out_4u/CSV_PATH.txt)
          CONF=tmp/trade/conf/config.effective.yml
          OUT=_out_4u
          if [ -f tmp/trade/run_4u.py ]; then
            python -u tmp/trade/run_4u.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          elif [ -f tmp/trade/backtest/runner.py ]; then
            python -u tmp/trade/backtest/runner.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          elif [ -f tmp/trade/backtest/engine.py ]; then
            python -u tmp/trade/backtest/engine.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          else
            echo "No engine entry found (run_4u.py or backtest/engine.py)"
            exit 2
          fi
          test -f "$OUT/trades.csv" && cp -f "$OUT/trades.csv" "$OUT/trades_A.csv" || true

      - name: Patch TTL in config (B)
        shell: bash
        env:
          TTL: ${{ github.event.inputs.TTL_B }}
        run: |
          set -euo pipefail
          CONF=tmp/trade/conf/config.effective.yml
          python - <<'PY'
          import os,yaml,pathlib
          p=pathlib.Path("tmp/trade/conf/config.effective.yml")
          try:
              cfg=yaml.safe_load(p.read_text()) or {}
          except Exception:
              cfg={}
          cfg.setdefault('exit',{})
          cfg['exit']['ttl']=int(os.environ.get('TTL','0'))
          p.write_text(yaml.safe_dump(cfg, sort_keys=False))
          print("[patchB] ttl ->", cfg['exit']['ttl'])
          PY

      - name: Run B (TTL=B)
        shell: bash
        run: |
          set -euo pipefail
          DAT=$(cat _out_4u/CSV_PATH.txt)
          CONF=tmp/trade/conf/config.effective.yml
          OUT=_out_4u
          if [ -f tmp/trade/run_4u.py ]; then
            python -u tmp/trade/run_4u.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          elif [ -f tmp/trade/backtest/runner.py ]; then
            python -u tmp/trade/backtest/runner.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          elif [ -f tmp/trade/backtest/engine.py ]; then
            python -u tmp/trade/backtest/engine.py --data_path "$DAT" --config "$CONF" --out_dir "$OUT" || true
          else
            echo "No engine entry found (run_4u.py or backtest/engine.py)"
            exit 2
          fi
          test -f "$OUT/trades.csv" && cp -f "$OUT/trades.csv" "$OUT/trades_B.csv" || true

      - name: Assert A != B (TTL effect)
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import hashlib,sys,pathlib
          a=pathlib.Path("_out_4u/trades_A.csv")
          b=pathlib.Path("_out_4u/trades_B.csv")
          if not a.exists() or not b.exists():
              print(f"MISSING {a} or {b}")
              sys.exit(2)
          h=lambda p: hashlib.sha256(p.read_bytes()).hexdigest()
          A=h(a); B=h(b)
          print("SHA_A",A); print("SHA_B",B)
          if A==B:
              print("Error: Exit/TTL not applied (A==B)")
              sys.exit(3)
          PY

      - name: Upload artifacts (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: exit_ttl_abtest_outputs
          path: _out_4u
