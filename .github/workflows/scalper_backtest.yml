name: backtest

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python 3.11 (pinned) + pip cache
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: eth_scalp_trader_pack_v0_1/requirements.txt

      - name: Prepare code & data
        shell: bash
        run: |
          set -euxo pipefail
          # unzip availability (usually present on ubuntu-latest)
          if ! command -v unzip >/dev/null; then
            sudo apt-get update && sudo apt-get install -y unzip
          fi

          mkdir -p unzipped eth_scalp_trader_pack_v0_1/data

          # 1) Unzip code pack if the folder isn't already in repo
          if [ -f "eth_scalp_trader_pack_v0_1.zip" ]; then
            unzip -q -o eth_scalp_trader_pack_v0_1.zip -d unzipped
          fi
          # find inner folder named exactly eth_scalp_trader_pack_v0_1 (nested zip-safe)
          if [ ! -d "eth_scalp_trader_pack_v0_1/core" ]; then
            packdir="$(find unzipped -maxdepth 2 -type d -name 'eth_scalp_trader_pack_v0_1' | head -n1 || true)"
            test -n "${packdir}" || { echo "❌ code pack not found under unzipped/"; ls -R unzipped || true; exit 2; }
            mkdir -p eth_scalp_trader_pack_v0_1
            cp -R "${packdir}/." "eth_scalp_trader_pack_v0_1/"
          fi

          # 2) Unzip ETH 1m data and normalize to expected filename
          if [ -f "ETHUSDT_1min_2020_2025.zip" ]; then
            unzip -q -o ETHUSDT_1min_2020_2025.zip -d unzipped
          fi
          csv="$(find unzipped -type f \( -iname 'ETHUSDT*1m*.csv' -o -iname 'ETH*1min*.csv' \) | head -n1 || true)"
          if [ -z "${csv}" ] && [ -f "ETHUSDT_1min_2020_2025.csv" ]; then
            csv="ETHUSDT_1min_2020_2025.csv"
          fi
          test -n "${csv}" || { echo "❌ ETH 1m CSV not found"; ls -R unzipped || true; exit 2; }
          cp -f "${csv}" "eth_scalp_trader_pack_v0_1/data/ETHUSDT-1m.csv"

          # Sanity checks
          python - <<'PY'
import os, sys
assert os.path.exists('eth_scalp_trader_pack_v0_1/config.yml'), "config.yml missing"
assert os.path.exists('eth_scalp_trader_pack_v0_1/data/ETHUSDT-1m.csv'), "CSV missing"
print("✅ inputs ready")
PY

      - name: Install dependencies
        working-directory: eth_scalp_trader_pack_v0_1
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Run backtest
        working-directory: eth_scalp_trader_pack_v0_1
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p outputs logs results
          # run and tee to log; run_backtest.py loads ./config.yml by default
          python run_backtest.py 2>&1 | tee logs/run.log
          echo "== Dump outputs =="
          find outputs -type f || true
          find results -type f || true

      - name: Upload artifacts (pinned)
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: backtest-eth-scalper
          path: |
            eth_scalp_trader_pack_v0_1/outputs/**
            eth_scalp_trader_pack_v0_1/results/**
            eth_scalp_trader_pack_v0_1/logs/**
            eth_scalp_trader_pack_v0_1/**/equity*.csv
            eth_scalp_trader_pack_v0_1/**/metrics*.json
          if-no-files-found: warn
          retention-days: 7
