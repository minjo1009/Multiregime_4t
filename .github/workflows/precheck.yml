name: Precheck-STRICT
on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: Path to code zip (optional)
        required: false
        default: codepack_v1.1.8_baseline.zip
      DATA_ZIP:
        description: Path to data zip
        required: true
        default: ETHUSDT_1min_2020_2025.zip
      CSV_GLOB:
        description: CSV glob (ex: **/*ETHUSDT*1min*2020*2025*.csv)
        required: false
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
jobs:
  precheck:
    runs-on: ubuntu-latest
    env:
      PY: "3.11"
      CHECKOUT_SHA: "11bd71901b2cbc3cb3cbbf5b1b973078d1b96b7a"
      SETUP_PYTHON_SHA: "a26af69be951a213d495a4c3e4e4022e16d87065"
      UPLOAD_ARTIFACT_SHA: "ea165f8d65b6e0b1f71c5e3cd2a1f1e166d0ad2d"
    steps:
      - name: Validate pinned SHAs
        run: >
          set -euo pipefail &&
          git ls-remote https://github.com/actions/checkout.git | grep -F "$CHECKOUT_SHA" &&
          git ls-remote https://github.com/actions/setup-python.git | grep -F "$SETUP_PYTHON_SHA" &&
          git ls-remote https://github.com/actions/upload-artifact.git | grep -F "$UPLOAD_ARTIFACT_SHA"
      - name: Checkout
        uses: actions/checkout@${{ env.CHECKOUT_SHA }}
      - name: Setup Python
        uses: actions/setup-python@${{ env.SETUP_PYTHON_SHA }}
        with:
          python-version: ${{ env.PY }}
      - name: Install core deps
        run: >
          python -m pip install --upgrade pip &&
          pip install pandas numpy pyyaml
      - name: Prepare workspace
        run: >
          set -euo pipefail &&
          mkdir -p tmp/data _out_4u/run &&
          if [ -n "${{ github.event.inputs.DATA_ZIP }}" ]; then unzip -q "${{ github.event.inputs.DATA_ZIP }}" -d tmp/data || true; fi &&
          if [ ! -f _out_4u/run/gating_debug.json ]; then echo "{}" > _out_4u/run/gating_debug.json; fi &&
          if [ ! -f _out_4u/run/summary.json ]; then echo "{}" > _out_4u/run/summary.json; fi
      - name: Preflight strict
        run: >
          python preflight_strict.py
          --data-root tmp/data
          --csv-glob "${{ github.event.inputs.CSV_GLOB }}"
          --outdir _out_4u/run
      - name: Upload artifacts
        uses: actions/upload-artifact@${{ env.UPLOAD_ARTIFACT_SHA }}
        with:
          name: precheck-artifacts
          path: |
            _out_4u/run/gating_debug.json
            _out_4u/run/summary.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
