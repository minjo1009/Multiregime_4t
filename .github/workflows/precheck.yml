name: Precheck-STRICT-NO-CHECKOUT
on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: 'Path to code zip (optional)'
        required: false
        default: codepack_v1.1.8_baseline.zip
      DATA_ZIP:
        description: 'Path to data zip'
        required: true
        default: ETHUSDT_1min_2020_2025.zip
      CSV_GLOB:
        description: 'CSV glob (e.g. **/*ETHUSDT*1min*2020*2025*.csv)'
        required: false
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - name: Show runner Python
        run: |
          set -euo pipefail
          python3 --version || true
          python --version || true
      - name: Install core deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip || true
          pip install pandas numpy pyyaml || true
      - name: Prepare workspace
        run: |
          set -euo pipefail
          mkdir -p tmp/data _out_4u/run
          if [ -n "${{ github.event.inputs.DATA_ZIP }}" ]; then unzip -q "${{ github.event.inputs.DATA_ZIP }}" -d tmp/data || true; fi
          echo "{}" > _out_4u/run/gating_debug.json
          echo "{}" > _out_4u/run/summary.json
          echo "open_time,signal,score" > _out_4u/run/preds_test.csv
          echo "open_time,side,price,qty" > _out_4u/run/trades.csv
      - name: Write preflight_strict.py (no heredoc)
        run: |
          set -euo pipefail
          printf '%s
' 'import argparse, json, os, glob' > preflight_strict.py
          printf '%s
' 'import pandas as pd' >> preflight_strict.py
          printf '%s
' 'REQUIRED = ["open_time","open","high","low","close","volume"]' >> preflight_strict.py
          printf '%s
' 'def find_csv(data_root, csv_glob):' >> preflight_strict.py
          printf '%s
' '    pattern = csv_glob if csv_glob else "**/*.csv"' >> preflight_strict.py
          printf '%s
' '    paths = glob.glob(os.path.join(data_root, pattern), recursive=True)' >> preflight_strict.py
          printf '%s
' '    if not paths: raise FileNotFoundError(f"No CSV found under {data_root} with pattern {pattern}")' >> preflight_strict.py
          printf '%s
' '    preferred = [p for p in paths if "ETHUSDT" in os.path.basename(p).upper()]' >> preflight_strict.py
          printf '%s
' '    return (preferred or paths)[0]' >> preflight_strict.py
          printf '%s
' 'def main():' >> preflight_strict.py
          printf '%s
' '    ap = argparse.ArgumentParser()' >> preflight_strict.py
          printf '%s
' '    ap.add_argument("--data-root", required=True)' >> preflight_strict.py
          printf '%s
' '    ap.add_argument("--csv-glob", default="**/*.csv")' >> preflight_strict.py
          printf '%s
' '    ap.add_argument("--outdir", required=True)' >> preflight_strict.py
          printf '%s
' '    args = ap.parse_args()' >> preflight_strict.py
          printf '%s
' '    os.makedirs(args.outdir, exist_ok=True)' >> preflight_strict.py
          printf '%s
' '    csv_path = find_csv(args.data_root, args.csv_glob)' >> preflight_strict.py
          printf '%s
' '    df = pd.read_csv(csv_path, nrows=2000)' >> preflight_strict.py
          printf '%s
' '    missing = [c for c in REQUIRED if c not in df.columns]' >> preflight_strict.py
          printf '%s
' '    report = {"csv_path": csv_path, "rows_read": int(len(df)), "missing": missing, "required": REQUIRED, "status": "ok" if not missing else "fail"}' >> preflight_strict.py
          printf '%s
' '    with open(os.path.join(args.outdir, "summary.json"), "w") as f: json.dump(report, f, indent=2)' >> preflight_strict.py
          printf '%s
' '    if missing: raise SystemExit(f"Missing required columns: {missing}")' >> preflight_strict.py
          printf '%s
' 'if __name__ == "__main__": main()' >> preflight_strict.py
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e0b1f71c5e3cd2a1f1e166d0ad2d
        with:
          name: precheck-artifacts
          path: |
            _out_4u/run/gating_debug.json
            _out_4u/run/summary.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
