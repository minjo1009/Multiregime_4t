name: Precheck CSV (strict)

on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: "Code zip at repo root (unused in precheck)"
        default: trade_v1.0.8.zip
        required: true
      DATA_ZIP:
        description: "Data zip at repo root"
        default: ETHUSDT_1min_2020_2025.zip
        required: true
      CSV_GLOB:
        description: "CSV glob inside data dir"
        default: "*ETHUSDT*1min*2020*2025*.csv"
        required: true

permissions:
  contents: read

env:
  PY: "3.11"
  DATA_DIR: tmp/data
  OUT_DIR: _out_4u/run

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901b2cbc3cb3cbbf5b1b973078d1b96b7a

      - name: Setup Python (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PY }}

      - name: Prepare dirs & unzip data
        shell: bash
        run: |
          set -euo pipefail
          rm -rf "$DATA_DIR" "$OUT_DIR"
          mkdir -p "$DATA_DIR" "$OUT_DIR"
          unzip -q -o "${{ github.event.inputs.DATA_ZIP }}" -d "$DATA_DIR"

      - name: Install minimal deps for precheck
        shell: bash
        run: |
          set -euo pipefail
          python -m pip -q install -U pip
          python -m pip -q install pandas

      - name: Detect CSV & export CSV_PATH
        id: detect_csv
        shell: bash
        env:
          CSV_GLOB_IN: ${{ github.event.inputs.CSV_GLOB }}
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          base="$DATA_DIR"
          # 1) 사용자 글롭
          files=( $base/**/$CSV_GLOB_IN )
          # 2) 폴백
          if [ ${#files[@]} -eq 0 ]; then files=( $base/**/*.csv ); fi
          if [ ${#files[@]} -eq 0 ]; then echo "ERROR: No CSV found under $base"; exit 1; fi
          p="${files[0]}"
          ABS="$(python -c 'import os,sys;print(os.path.abspath(sys.argv[1]))' "$p")"
          echo "CSV_PATH=$ABS" | tee -a "$GITHUB_ENV"
          echo "Using CSV_PATH=$ABS"

      - name: Preflight columns
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import os, sys, pandas as pd
          p = os.environ.get("CSV_PATH")
          if not p or not os.path.exists(p):
              print("ERROR: CSV_PATH missing or not exists:", p); sys.exit(1)
          df = pd.read_csv(p, nrows=2)
          need = {'open_time','open','high','low','close','volume'}
          cols = {str(c).lower() for c in df.columns}
          miss = need - cols
          if miss:
              print("ERROR: Missing base columns:", sorted(miss)); sys.exit(1)
          print("OK: Columns present:", sorted(cols & need))
          PY