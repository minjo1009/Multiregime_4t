name: Backtest-Grid-Stage3
on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: 'Path or URL to code zip (repo root file name allowed)'
        required: true
        default: strategy_v1_codepack_v1.0.zip
      DATA_ZIP:
        description: 'Path or URL to data zip (repo root file name allowed)'
        required: true
        default: ETHUSDT_1min_2020_2025.zip
      CSV_GLOB:
        description: 'CSV glob (e.g. **/*ETHUSDT*1min*2020*2025*.csv)'
        required: false
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
jobs:
  grid:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        thr: [-0.1, 0.0, 0.1]
        a: [1.0, 1.2]
        hold: [6, 8]
    steps:
      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip || true
          pip install pandas numpy pyyaml || true

      - name: Acquire code/data (local / URL / repo raw)
        env:
          CODE_ZIP: "${{ github.event.inputs.CODE_ZIP }}"
          DATA_ZIP: "${{ github.event.inputs.DATA_ZIP }}"
        run: |
          set -euo pipefail
          mkdir -p tmp/trade tmp/data _out_4u/run tools
          # CODE_ZIP
          CSRC=""
          if [ -f "$CODE_ZIP" ]; then
            CSRC="$CODE_ZIP"
          elif echo "$CODE_ZIP" | grep -qiE '^https?://'; then
            echo "Downloading code from URL: $CODE_ZIP"
            curl -fL "$CODE_ZIP" -o tmp/trade/code.zip
            CSRC="tmp/trade/code.zip"
          else
            RCODE="https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/$CODE_ZIP"
            echo "Trying repo raw URL: $RCODE"
            curl -fL "$RCODE" -o tmp/trade/code.zip
            CSRC="tmp/trade/code.zip"
          fi
          unzip -q "$CSRC" -d tmp/trade
          # DATA_ZIP
          DSRC=""
          if [ -f "$DATA_ZIP" ]; then
            DSRC="$DATA_ZIP"
          elif echo "$DATA_ZIP" | grep -qiE '^https?://'; then
            echo "Downloading data from URL: $DATA_ZIP"
            curl -fL "$DATA_ZIP" -o tmp/data/data.zip
            DSRC="tmp/data/data.zip"
          else
            RDATA="https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/$DATA_ZIP"
            echo "Trying repo raw URL: $RDATA"
            curl -fL "$RDATA" -o tmp/data/data.zip
            DSRC="tmp/data/data.zip"
          fi
          unzip -q "$DSRC" -d tmp/data

      - name: Patch params for this matrix
        env:
          THR: "${{ matrix.thr }}"
          AMP: "${{ matrix.a }}"
          HOLD: "${{ matrix.hold }}"
        run: |
          set -euo pipefail
          PARAM=tmp/trade/conf/params.v1.yml
          sed -i -E "s/(^\s*thr:\s*).*/\1${{ env.THR }}/" "$PARAM"
          sed -i -E "s/(^\s*a:\s*).*/\1${{ env.AMP }}/" "$PARAM"
          sed -i -E "s/(^hold:\s*).*/hold: ${{ env.HOLD }}/" "$PARAM"
          echo "---- params.v1.yml ----"
          cat "$PARAM"

      - name: Preflight strict
        run: |
          set -euo pipefail
          python tmp/trade/preflight_strict.py --data-root tmp/data --csv-glob "${{ github.event.inputs.CSV_GLOB }}" --outdir _out_4u/run

      - name: Detect entrypoint and run
        env:
          CSV_GLOB: "${{ github.event.inputs.CSV_GLOB }}"
        run: |
          set -euo pipefail
          ENTRY=""
          for c in "tmp/trade/run_4u.py" "tmp/trade/backtest/run_4u.py" "tmp/trade/run.py" "tmp/trade/backtest/runner.py"; do
            if [ -f "$c" ]; then ENTRY="$c"; break; fi
          done
          if [ -z "$ENTRY" ]; then echo "No entrypoint found"; exit 1; fi
          echo "ENTRY=$ENTRY"
          python "$ENTRY" --data-root tmp/data --csv-glob "$CSV_GLOB" --outdir _out_4u/run || true

      - name: Compute grid metrics (no heredoc, base64)
        env:
          PY_B64: "aW1wb3J0IHBhbmRhcyBhcyBwZCwganNvbiwgbnVtcHkgYXMgbnAsIG9zCnA9J19vdXRfNHUvcnVuL3ByZWRzX3Rlc3QuY3N2JwptPXsnd2lucmF0ZSc6Tm9uZSwnbWNjJzpOb25lfQppZiBvcy5wYXRoLmV4aXN0cyhwKToKICAgIGRmPXBkLnJlYWRfY3N2KHApCiAgICB5X3ByZWQ9bnAud2hlcmUoZGZbJ3NpZ25hbCddLnRvX251bXB5KCk+PTAsMSwtMSkKICAgICMgcXVpY2sgcHJveHkgbGFiZWw6IG5leHQtc3RlcCAnc2NvcmUnIHNpZ24KICAgIHJldD1kZlsnc2NvcmUnXS5zaGlmdCgtMSkuZmlsbG5hKDAuMCkudG9fbnVtcHkoKQogICAgeV90cnVlPW5wLnNpZ24ocmV0KTsgeV90cnVlW3lfdHJ1ZT09MF09MQogICAgdHA9aW50KG5wLnN1bSgoeV90cnVlPT0xKSYoeV9wcmVkPT0xKSkpCiAgICB0bj1pbnQobnAuc3VtKCh5X3RydWU9PS0xKSYoeV9wcmVkPT0tMSkpKQogICAgZnA9aW50KG5wLnN1bSgoeV90cnVlPT0tMSkmKHlfcHJlZD09MSkpKQogICAgZm49aW50KG5wLnN1bSgoeV90cnVlPT0xKSYoeV9wcmVkPT0tMSkpKQogICAgd2lucmF0ZT1mbG9hdCgodHArdG4pL21heCgxLGxlbihkZikpKQogICAgbnVtPXRwKnRuLWZwKmZuOyBkZW49KCh0cCtmcCkqKHRwK2ZuKSoodG4rZnApKih0bitmbikpKiowLjUrMWUtOQogICAgbVsnd2lucmF0ZSddPXdpbnJhdGU7IG1bJ21jYyddPWZsb2F0KG51bS9kZW4pCndpdGggb3BlbignX291dF80dS9ydW4vZ3JpZF9tZXRyaWNzLmpzb24nLCd3JykgYXMgZjoganNvbi5kdW1wKG0sZixpbmRlbnQ9MikK"
        run: |
          set -euo pipefail
          echo "$PY_B64" > tools/metrics.b64
          python -c "import base64; open('tools/metrics.py','wb').write(base64.b64decode(open('tools/metrics.b64','rb').read()))"
          python tools/metrics.py

      - name: Upload artifacts
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097
        with:
          name: "grid-thr=${{ matrix.thr }}-a=${{ matrix.a }}-hold=${{ matrix.hold }}"
          path: |
            _out_4u/run/gating_debug.json
            _out_4u/run/summary.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
            _out_4u/run/grid_metrics.json
