name: diagnose119

on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: Repo path to code zip (root)
        required: true
        default: trade_v1.1.9.zip
      DATA_ZIP:
        description: Repo path to data zip (root)
        required: true
        default: ETHUSDT_1min_2020_2025.zip
      CSV_FILE:
        description: CSV filename after unzip
        required: true
        default: ETHUSDT_1min_2020_2025.csv

jobs:
  diag:
    runs-on: ubuntu-latest
    env:
      RUN_DIR: tmp/trade
      DATA_DIR: tmp/data
      OUT_DIR: _out_119/diag
      PYVER: '3.11'
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Setup Python (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYVER }}

      - name: Verify action SHAs (list refs then grep)
        shell: bash
        run: |
          set -euo pipefail
          UPL=ea165f8d65b6e75b540449e92b4886f43607fa02  # actions/upload-artifact v4
          git ls-remote https://github.com/actions/upload-artifact | grep -q "$UPL" \
            || { echo "::error::upload-artifact commit not found in refs"; exit 61; }
          [[ ${#UPL} -eq 40 ]] || { echo "::error::not full-length SHA"; exit 62; }
          echo "[ok] upload-artifact SHA verified"

      - name: Resolve ZIPs
        shell: bash
        run: |
          set -euo pipefail
          res(){ local in="$1" out="$2" p=""; local base="$(basename "$in")";
            if [[ -f "$in" ]]; then p="${GITHUB_WORKSPACE}/$in";
            else p="$(find "${GITHUB_WORKSPACE}" -maxdepth 2 -type f -name "$base" -print -quit || true)"; fi
            [[ -n "$p" && -f "$p" ]] || { echo "::error::ZIP not found: $in"; exit 66; }
            echo "${out}=${p}" >> "$GITHUB_ENV"; echo "[resolved] $in -> $p";
          }
          res "${{ github.event.inputs.CODE_ZIP }}" CODE_ZIP_ABS
          res "${{ github.event.inputs.DATA_ZIP }}" DATA_ZIP_ABS

      - name: Unpack code & data
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$RUN_DIR" "$DATA_DIR" "${GITHUB_WORKSPACE}/${OUT_DIR}"
          unzip -q "$CODE_ZIP_ABS" -d "$RUN_DIR"
          unzip -q "$DATA_ZIP_ABS" -d "$DATA_DIR"
          RUN_PY="$(find "$RUN_DIR" -maxdepth 3 -type f -name 'run_4u.py' -print -quit || true)"
          ENG_PY="$(find "$RUN_DIR" -maxdepth 5 -type f -path '*/backtest/engine.py' -print -quit || true)"
          [[ -n "$RUN_PY" && -n "$ENG_PY" ]] || { echo "::error::runner or engine not found"; exit 67; }
          echo "RUN_PY=$RUN_PY" >> "$GITHUB_ENV"
          echo "ENG_PY=$ENG_PY" >> "$GITHUB_ENV"
          CSV="${GITHUB_WORKSPACE}/${DATA_DIR}/${{ github.event.inputs.CSV_FILE }}"
          if [[ ! -f "$CSV" ]]; then
            CSV="$(find "$DATA_DIR" -type f -name "${{ github.event.inputs.CSV_FILE }}" -print -quit || true)"
            [[ -n "$CSV" ]] || { echo "::error::CSV not found"; exit 64; }
            CSV="${GITHUB_WORKSPACE}/${CSV}"
          fi
          echo "CSV_PATH=$CSV" >> "$GITHUB_ENV"

      - name: Preflight (headers + n_rows)
        shell: bash
        run: |
          set -euo pipefail
          HDR="$(head -n1 "$CSV_PATH")"
          for c in open_time open high low close volume; do
            echo "$HDR" | grep -q "\b$c\b" || { echo "::error::missing column: $c"; exit 75; }
          done
          rows=$(($(wc -l < "$CSV_PATH") - 1))
          jq -n --arg path "$CSV_PATH" --arg hdr "$HDR" --argjson rows "$rows" \
            '{path:$path, header:$hdr, n_rows:$rows}' \
            > "${GITHUB_WORKSPACE}/${OUT_DIR}/preflight.json"
          cat "${GITHUB_WORKSPACE}/${OUT_DIR}/preflight.json"

      - name: Force conf.effective.yml (printf; no heredoc)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$RUN_DIR/conf"
          CONF="$RUN_DIR/conf/config.effective.yml"
          : > "$CONF"
          printf '%s\n' 'thr_by_session:'     >> "$CONF"
          printf '%s\n' '  US: 4.0'           >> "$CONF"
          printf '%s\n' '  EU: 3.8'           >> "$CONF"
          printf '%s\n' '  ASIA: 3.5'         >> "$CONF"
          printf '%s\n' 'tp_pct: 0.0035'      >> "$CONF"
          printf '%s\n' 'sl_pct: 0.0018'      >> "$CONF"
          printf '%s\n' 'hold_bars: 6'        >> "$CONF"
          sha256sum "$CONF" | awk '{print "[conf] sha256="$1}'
          jq -n --arg conf "$CONF" --arg run "$RUN_PY" --arg eng "$ENG_PY" \
            '{conf_effective:$conf, run_py:$run, engine_py:$eng}' \
            > "${GITHUB_WORKSPACE}/${OUT_DIR}/sysinfo.json"

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install -U pip >/dev/null
          pip install pandas numpy pyyaml >/dev/null
          if ! command -v jq >/dev/null 2>&1; then sudo apt-get update -y && sudo apt-get install -y jq; fi

      - name: Run 1.1.9
        shell: bash
        run: |
          set -euo pipefail
          export PYTHONPATH="$RUN_DIR"
          python "$RUN_PY" --data_path "$CSV_PATH" --out_dir "${GITHUB_WORKSPACE}/${OUT_DIR}" || true

      - name: Validate summary vs preflight
        shell: bash
        run: |
          set -euo pipefail
          S="${GITHUB_WORKSPACE}/${OUT_DIR}/summary.json"
          P="${GITHUB_WORKSPACE}/${OUT_DIR}/preflight.json"
          test -s "$S" || { echo "::error::summary.json missing"; exit 78; }
          ok=$(jq -e '((.placeholders // false) == false) and (.hit_rate!=null) and (.profit_factor!=null) and (.n_trades!=null)' "$S" >/dev/null && echo ok || echo ng)
          [[ "$ok" == "ok" ]] || { echo "::error::PLACEHOLDER_OR_NULL"; cat "$S"; exit 78; }
          nt=$(jq -r '.n_trades' "$S")
          rows=$(jq -r '.n_rows // empty' "$S"); [[ -n "$rows" ]] || rows=$(jq -r '.n_rows' "$P")
          ratio=$(awk -v nt="$nt" -v nr="$rows" 'BEGIN{ if(nr>0){printf "%.6f", nt/nr}else{print "NaN"} }')
          echo "[ratio] n_trades/n_rows=$ratio"
          awk -v r="$ratio" 'BEGIN{exit !(r<0.95)}' || { echo "::error::TRADE_ROW_EQUIV n_trades >= 0.95 * n_rows"; exit 79; }

      - name: Upload artifacts (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: diagnose119_outputs
          path: |
            _out_119/diag/preflight.json
            _out_119/diag/summary.json
            _out_119/diag/gating_debug.json
            _out_119/diag/sysinfo.json
          if-no-files-found: warn