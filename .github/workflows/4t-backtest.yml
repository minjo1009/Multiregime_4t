name: 4t Backtest (Pinned & Safe)

on:
  workflow_dispatch:
    inputs:
      code_zip:
        description: "Code pack zip in repo root"
        default: "4t_hotfix_pack.zip"
        required: true
      data_csv:
        description: "ETH 1min CSV in repo (or zip alongside)"
        default: "ETHUSDT_1min_2020_2025.csv"
        required: true
      train_start:
        description: "Train start (YYYY-MM-DD)"
        default: "2025-01-01"
        required: true
      train_end:
        description: "Train end (YYYY-MM-DD)"
        default: "2025-04-30"
        required: true
      test_start:
        description: "Test start (YYYY-MM-DD)"
        default: "2025-05-01"
        required: true
      test_end:
        description: "Test end (YYYY-MM-DD)"
        default: "2025-06-30"
        required: true
      H:
        description: "H (horizon)"
        default: "5"
        required: true
      fee_bps:
        description: "Fee (bps)"
        default: "1.0"
        required: true
      cov_low:
        description: "Coverage lower bound (0~1)"
        default: "0.2"
        required: true
      cov_high:
        description: "Coverage upper bound (0~1)"
        default: "0.4"
        required: true

permissions:
  contents: read

jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned SHA)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5 pinned
        with:
          fetch-depth: 1

      - name: Setup Python 3.11 (pinned SHA)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0 pinned
        with:
          python-version: "3.11"

      - name: Show inputs
        run: |
          echo "code_zip=${{ inputs.code_zip }}"
          echo "data_csv=${{ inputs.data_csv }}"
          echo "train=${{ inputs.train_start }}..${{ inputs.train_end }}"
          echo "test=${{ inputs.test_start }}..${{ inputs.test_end }}"
          echo "H=${{ inputs.H }} fee_bps=${{ inputs.fee_bps }} cov=[${{ inputs.cov_low }},${{ inputs.cov_high }}]"

      - name: Ensure unzip & tooling
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip

      - name: Resolve code pack
        id: codepack
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ inputs.code_zip }}"
          if [[ -f "$ZIP" ]]; then
            FOUND="$ZIP"
          else
            # backup search
            mapfile -t CANDS < <(ls -1 *.zip 2>/dev/null | grep -i -E '4t.*pack|trend4t|hotfix')
            if [[ ${#CANDS[@]} -gt 0 ]]; then
              FOUND="${CANDS[0]}"
            else
              echo "Code pack zip not found in repo root."
              exit 2
            fi
          fi
          echo "found_zip=$FOUND" >> "$GITHUB_OUTPUT"
          unzip -o "$FOUND" -d .
          # normalize layout
          if [[ -d trend4p ]]; then echo "trend4p/ exists"; else
            # sometimes packs nest a directory; pull it up
            TOP=$(find . -maxdepth 2 -type d -name trend4p | head -n1 || true)
            if [[ -n "$TOP" && "$TOP" != "./trend4p" ]]; then
              rsync -a "$TOP"/ ./trend4p/
            fi
          fi

      - name: Resolve data (CSV or ZIP)
        id: datain
        shell: bash
        run: |
          set -euo pipefail
          CSV="${{ inputs.data_csv }}"
          if [[ -f "$CSV" ]]; then
            DATA="$CSV"
          elif [[ -f "data/$CSV" ]]; then
            DATA="data/$CSV"
          else
            # try to unzip any data zip containing the csv name stem
            STEM="${CSV%.csv}"
            mapfile -t ZS < <(ls -1 *.zip data/*.zip 2>/dev/null | grep -i "$STEM" || true)
            if [[ ${#ZS[@]} -gt 0 ]]; then
              unzip -o "${ZS[0]}" -d data
              if [[ -f "data/$CSV" ]]; then DATA="data/$CSV"; fi
            fi
          fi
          if [[ -z "${DATA:-}" || ! -f "$DATA" ]]; then
            echo "Data CSV not found after attempts."
            ls -la
            ls -la data 2>/dev/null || true
            exit 3
          fi
          echo "data_path=$DATA" >> "$GITHUB_OUTPUT"

      - name: Cache pip (pinned SHA)
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4 pinned
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py311-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -V
          python -m pip install -U pip wheel
          if [[ -f requirements.txt ]]; then
            python -m pip install -r requirements.txt
          elif [[ -f trend4p/requirements.txt ]]; then
            python -m pip install -r trend4p/requirements.txt
          else
            # minimal stack for our runners
            python -m pip install pandas numpy scipy scikit-learn lightgbm ta tqdm joblib
          fi

      - name: Run backtest
        id: runbt
        shell: bash
        env:
          DATA: ${{ steps.datain.outputs.data_path }}
        run: |
          set -euo pipefail
          SCRIPT=""
          if [[ -f run_4t.py ]]; then SCRIPT="run_4t.py"; fi
          if [[ -z "$SCRIPT" && -f trend4p/run_4t.py ]]; then SCRIPT="trend4p/run_4t.py"; fi
          if [[ -z "$SCRIPT" ]]; then echo "run_4t.py not found"; exit 4; fi

          python "$SCRIPT" \
            --data "$DATA" \
            --train_start "${{ inputs.train_start }}" --train_end "${{ inputs.train_end }}" \
            --test_start  "${{ inputs.test_start }}"  --test_end  "${{ inputs.test_end }}" \
            --H "${{ inputs.H }}" --fee_bps "${{ inputs.fee_bps }}" \
            --cov_low "${{ inputs.cov_low }}" --cov_high "${{ inputs.cov_high }}" \
            --out_dir "./_out_4t/github"

          # collect useful artifacts if present
          OUTDIR="./_out_4t/github"
          mkdir -p "$OUTDIR"
          if ls "$OUTDIR"/*.json >/dev/null 2>&1; then echo "has_json=true" >> "$GITHUB_OUTPUT"; fi
          if ls "$OUTDIR"/*.csv  >/dev/null 2>&1; then echo "has_csv=true"  >> "$GITHUB_OUTPUT"; fi

      - name: Upload artifacts (pinned SHA)
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2 pinned
        with:
          name: backtest_${{ github.run_id }}
          path: |
            _out_4t/github/**
            **/train_test_summary*.json
            **/logs/**
          if-no-files-found: warn
