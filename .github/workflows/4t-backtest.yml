name: 4t-backtest

on:
  workflow_dispatch:
    inputs:
      train_start:
        description: "Train start (UTC)"
        required: true
        default: "2025-01-01"
      train_end:
        description: "Train end (UTC)"
        required: true
        default: "2025-04-30"
      test_start:
        description: "Test start (UTC)"
        required: true
        default: "2025-05-01"
      test_end:
        description: "Test end (UTC)"
        required: true
        default: "2025-06-30"
      H:
        description: "Horizon H"
        required: true
        default: "5"
      fee_bps:
        description: "Fee (bps)"
        required: true
        default: "1.0"
      cov_low:
        description: "Coverage lower bound"
        required: true
        default: "0.20"
      cov_high:
        description: "Coverage upper bound"
        required: true
        default: "0.40"

permissions:
  contents: read

jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Show repo root
        run: |
          pwd
          ls -al

      - name: Ensure required zips exist
        run: |
          set -euo pipefail
          test -f "trend4t_fix_full.zip" || { echo "❌ trend4t_fix_full.zip not found in repo root"; exit 2; }
          test -f "ETHUSDT_1min_2020_2025.zip" || { echo "❌ ETHUSDT_1min_2020_2025.zip not found in repo root"; exit 3; }

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: '3.11'

      - name: Unzip code & data
        run: |
          set -euo pipefail
          rm -rf src data _out_4t
          mkdir -p src data _out_4t/github
          unzip -o "trend4t_fix_full.zip" -d src
          unzip -o "ETHUSDT_1min_2020_2025.zip" -d data || true
          echo "After unzip:"
          ls -al
          echo "src tree:"
          ls -al src || true
          echo "data tree:"
          ls -al data || true

      - name: Determine CSV path
        id: dataloc
        run: |
          set -euo pipefail
          # 가장 흔한 이름 먼저 시도
          if [ -f "data/ETHUSDT_1min_2020_2025.csv" ]; then
            p="data/ETHUSDT_1min_2020_2025.csv"
          else
            # data 폴더 안에서 .csv 하나 찾기
            p=$(ls data/*.csv 2>/dev/null | head -n1 || true)
          fi
          if [ -z "${p:-}" ]; then
            echo "❌ CSV not found in data/"; ls -al data; exit 4
          fi
          echo "csv=${p}" >> "$GITHUB_OUTPUT"
          echo "CSV_PATH=${p}"

      - name: Install dependencies (if any)
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f "src/requirements.txt" ]; then
            pip install -r src/requirements.txt
          else
            # 최소 의존: pandas, numpy, scikit-learn 등
            pip install pandas numpy scikit-learn
          fi

      - name: Cache pip (optional but safe)
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.0
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('src/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Run backtest 4t
        env:
          CSV: ${{ steps.dataloc.outputs.csv }}
        run: |
          set -euo pipefail
          python -V
          echo "Using CSV: $CSV"
          # 진입점은 코드팩 내부 기준으로 수정
          if [ -f "src/run_4t.py" ]; then
            PY="src/run_4t.py"
          elif [ -f "src/run_4q.py" ]; then
            PY="src/run_4q.py"
          else
            # 패키지식 엔트리포인트
            PY="-m trend4p.run_backtest_4t"
          fi

          python $PY \
            --data "$CSV" \
            --train_start "${{ github.event.inputs.train_start }}" \
            --train_end   "${{ github.event.inputs.train_end }}" \
            --test_start  "${{ github.event.inputs.test_start }}" \
            --test_end    "${{ github.event.inputs.test_end }}" \
            --H "${{ github.event.inputs.H }}" \
            --fee_bps "${{ github.event.inputs.fee_bps }}" \
            --cov_low "${{ github.event.inputs.cov_low }}" \
            --cov_high "${{ github.event.inputs.cov_high }}" \
            --out_dir "_out_4t/github" || { echo "❌ Backtest failed"; exit 1; }

          echo "======== Result files ========"
          find _out_4t -maxdepth 3 -type f -print || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: results_${{ github.run_id }}
          if-no-files-found: warn
          path: |
            _out_4t/github/**
            **/train_test_summary*.json
            **/logs/**
