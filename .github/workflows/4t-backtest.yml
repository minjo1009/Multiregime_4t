name: 4u Backtest

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: Python version
        required: false
        default: "3.12"
      code_glob:
        description: '코드 zip 패턴 (루트/하위1단계 검색)'
        required: false
        default: "trend4u*.zip"
      data_glob:
        description: '데이터 zip 패턴 (루트/하위1단계 검색)'
        required: false
        default: "ETH*1min*2025*.zip|ETHUSDT_1min_2020_2025.zip"
      out_dir:
        description: '출력 디렉터리'
        required: false
        default: "out"
      extra_args:
        description: '추가 인자 (옵션)'
        required: false
        default: ""

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  backtest:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Seoul
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Setup Python (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.python_version }}
          cache: pip

      - name: Backtest pipeline (unpack → hotfix → install → run)
        id: run
        run: |
          set -euo pipefail

          # 0) 폴더 보장 + 컨텍스트
          mkdir -p logs src data "${{ inputs.out_dir }}"
          {
            echo "Repo : $GITHUB_REPOSITORY"
            echo "SHA  : $GITHUB_SHA"
            echo "TZ   : $TZ"
          } | tee logs/context.txt
          python -V | tee -a logs/versions.txt

          # 1) 코드 ZIP 탐색 (루트/하위1단계)
          shopt -s nullglob nocaseglob
          CODE_ZIPS=( $(find . -maxdepth 2 -type f -iname "${{ inputs.code_glob }}") )
          if [ ${#CODE_ZIPS[@]} -eq 0 ]; then
            echo "ERROR: trend4u*.zip 을 찾지 못했습니다. 루트에 파일이 있는지 확인하세요."
            echo "::group::repo root listing"; ls -la; echo "::endgroup::"
            exit 1
          fi
          CODE_ZIP="${CODE_ZIPS[0]}"
          echo "CODE_ZIP=$CODE_ZIP" | tee -a logs/context.txt
          unzip -q -o "$CODE_ZIP" -d src

          # 2) 패키지 레이아웃 보정 및 __init__.py 핫픽스
          PKG_DIR=""
          if [ -d "src/trend4u/trend4p" ]; then
            PKG_DIR="src/trend4u/trend4p"
          elif [ -d "src/trend4p" ]; then
            mkdir -p src/trend4u
            mv src/trend4p src/trend4u/
            PKG_DIR="src/trend4u/trend4p"
          else
            PKG_DIR="$(find src -type d -path '*/trend4p' | head -n1 || true)"
          fi
          if [ -z "${PKG_DIR}" ]; then
            echo "ERROR: trend4p 패키지를 src/ 하위에서 찾지 못했습니다."
            find src -maxdepth 3 -type d -print | sed 's/^/  /'
            exit 1
          fi
          echo "PKG_DIR=$PKG_DIR" | tee -a logs/context.txt

          INIT="$PKG_DIR/__init__.py"
          if [ -f "$INIT" ]; then
            # 과거 오류: '__init__.py' 첫 줄에 '. __all__ = [...]' 로 시작 → SyntaxError
            sed -i 's/^[[:space:]]*\.__all__/__all__/g' "$INIT"
          fi

          export PYTHONPATH="$PWD/src:$PYTHONPATH"

          # 3) 데이터 ZIP 탐색 및 해제
          #    data_glob은 '패턴A|패턴B' 형태 허용
          IFS='|' read -r -a DGL <<< "${{ inputs.data_glob }}"
          DATA_ZIP=""
          for pat in "${DGL[@]}"; do
            hits=( $(find . -maxdepth 2 -type f -iname "$pat") )
            if [ ${#hits[@]} -gt 0 ]; then
              DATA_ZIP="${hits[0]}"
              break
            fi
          done
          if [ -z "$DATA_ZIP" ]; then
            echo "ERROR: 데이터 zip(예: ETHUSDT_1min_2020_2025.zip) 을 찾지 못했습니다."
            exit 1
          fi
          echo "DATA_ZIP=$DATA_ZIP" | tee -a logs/context.txt
          unzip -q -o "$DATA_ZIP" -d data
          CSV="$(find data -type f -name '*.csv' | head -n1 || true)"
          if [ -z "$CSV" ]; then
            echo "ERROR: data/ 아래에 CSV가 없습니다. ZIP 내용을 확인하세요."
            exit 1
          fi
          echo "CSV=$CSV" | tee -a logs/context.txt

          # 4) 의존성 설치 (repo/ 또는 src/ 기준 파일 자동 감지, 없으면 최소셋)
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          elif [ -f "src/requirements.txt" ]; then
            pip install -r src/requirements.txt
          else
            pip install numpy pandas matplotlib scikit-learn ta python-dateutil pytz
          fi

          # 5) 실행: 모듈 우선 → 스크립트 백업
          set +e
          echo "== Try: python -m trend4u.run_4u ==" | tee -a logs/run_4u.log
          python -m trend4u.run_4u --data "$CSV" --out "${{ inputs.out_dir }}" ${{ inputs.extra_args }} 2>&1 | tee -a logs/run_4u.log
          RC=${PIPESTATUS[0]}

          if [ $RC -ne 0 ]; then
            echo "모듈 실행 실패(rc=$RC). 엔트리 스크립트를 탐색합니다..." | tee -a logs/run_4u.log
            RUNNER=$(find src -maxdepth 3 -type f \( -name 'run_4u.py' -o -name 'backtest*.py' -o -name 'main.py' \) | head -n1 || true)
            if [ -n "$RUNNER" ]; then
              echo "== Try: python ${RUNNER} ==" | tee -a logs/run_4u.log
              python "$RUNNER" --data "$CSV" --out "${{ inputs.out_dir }}" ${{ inputs.extra_args }} 2>&1 | tee -a logs/run_4u.log
              RC=${PIPESTATUS[0]}
            fi
          fi
          set -e

          echo "EXIT_CODE=$RC" | tee -a logs/context.txt
          # out/ 생성만 하고 파일이 하나도 없어도 다음 단계에서 경고만 나오게 함
          exit $RC

      - name: Upload artifacts (pinned)
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest-${{ github.run_id }}
          path: |
            ${{ inputs.out_dir }}/**
            logs/**
          if-no-files-found: warn

      - name: Job summary
        if: always()
        run: |
          echo "### 4u Backtest — Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f "${{ inputs.out_dir }}/train_test_summary.json" ]; then
            echo "- Found: \`${{ inputs.out_dir }}/train_test_summary.json\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "- No \`train_test_summary.json\` generated." >> $GITHUB_STEP_SUMMARY
          fi
          echo "#### Context" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat logs/context.txt >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY