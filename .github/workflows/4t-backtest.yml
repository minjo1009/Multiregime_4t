name: 4u-backtest

on:
  workflow_dispatch:
    inputs:
      code_zip:
        description: '루트에 있는 코드 zip (기본: trend4u.zip)'
        required: false
        default: 'trend4u.zip'
      data_zip:
        description: '루트에 있는 데이터 zip (기본: ETHUSDT_1min_2020_2025.zip)'
        required: false
        default: 'ETHUSDT_1min_2020_2025.zip'
      start_date:
        description: '백테스트 시작일 (YYYY-MM-DD)'
        required: false
        default: '2020-01-01'
      end_date:
        description: '백테스트 종료일 (YYYY-MM-DD)'
        required: false
        default: '2025-08-22'
      capital:
        description: '초기자본'
        required: false
        default: '10000'
      fee:
        description: '수수료 비율'
        required: false
        default: '0.0005'
      slippage_bps:
        description: '슬리피지 (bps)'
        required: false
        default: '2'
      out_dir:
        description: '결과 출력 폴더 (기본: _out_4u)'
        required: false
        default: '_out_4u'
      python_version:
        description: 'Python 버전'
        required: false
        default: '3.11'

jobs:
  backtest:
    runs-on: ubuntu-22.04
    env:
      TZ: Asia/Seoul
      CODE_ZIP: ${{ github.event.inputs.code_zip || 'trend4u.zip' }}
      DATA_ZIP: ${{ github.event.inputs.data_zip || 'ETHUSDT_1min_2020_2025.zip' }}
      START_DATE: ${{ github.event.inputs.start_date || '2020-01-01' }}
      END_DATE: ${{ github.event.inputs.end_date || '2025-08-22' }}
      CAPITAL: ${{ github.event.inputs.capital || '10000' }}
      FEE: ${{ github.event.inputs.fee || '0.0005' }}
      SLIPPAGE_BPS: ${{ github.event.inputs.slippage_bps || '2' }}
      OUT_DIR: ${{ github.event.inputs.out_dir || '_out_4u' }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5 pin
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0 pin
        with:
          python-version: ${{ github.event.inputs.python_version || '3.11' }}
          cache: 'pip'

      - name: 준비(디렉토리/로그)
        run: |
          set -euo pipefail
          mkdir -p logs "${OUT_DIR}"
          echo "Repo: $GITHUB_REPOSITORY"            | tee -a logs/context.txt
          echo "SHA : $GITHUB_SHA"                   | tee -a logs/context.txt
          echo "TZ  : $TZ"                           | tee -a logs/context.txt
          python -V                                   | tee -a logs/versions.txt
          pip --version                               | tee -a logs/versions.txt

      - name: 코드/데이터 압축 해제
        run: |
          set -euo pipefail
          test -f "$CODE_ZIP" || { echo "코드 zip 미존재: $CODE_ZIP"; exit 1; }
          test -f "$DATA_ZIP" || { echo "데이터 zip 미존재: $DATA_ZIP"; exit 1; }

          unzip -o "$CODE_ZIP" -d .
          unzip -o "$DATA_ZIP" -d data_unzipped

          # 참고: trend4u.zip 내부에 trend4u/ 최상위 디렉토리 존재 확인
          test -d trend4u || { echo "trend4u 디렉토리 미존재"; ls -la; exit 1; }
          ls -la trend4u | tee -a logs/tree_trend4u.txt
          ls -la data_unzipped | tee -a logs/tree_data.txt

      - name: 파이썬 의존성 설치
        run: |
          set -euo pipefail
          if [[ -f trend4u/requirements.txt ]]; then
            pip install -r trend4u/requirements.txt
          else
            # 최소 구동 세트(비상)
            pip install numpy pandas matplotlib ta python-dateutil pytz
          fi

      - name: 백테스트 실행
        env:
          # 과도한 쓰레드 방지(런너 안정성)
          OMP_NUM_THREADS: 1
          OPENBLAS_NUM_THREADS: 1
          MKL_NUM_THREADS: 1
          NUMEXPR_NUM_THREADS: 1
          PYTHONPATH: ${{ github.workspace }}/trend4u
        run: |
          set -euo pipefail
          python trend4u/run_4u.py \
            --data-csv "data_unzipped/ETHUSDT_1min_2020_2025.csv" \
            --out-dir "${OUT_DIR}" \
            --start-date "${START_DATE}" \
            --end-date "${END_DATE}" \
            --capital "${CAPITAL}" \
            --fee "${FEE}" \
            --slippage-bps "${SLIPPAGE_BPS}" \
            | tee -a "logs/run_4u_stdout.txt"

      - name: 산출물 확인
        id: outcheck
        run: |
          set -euo pipefail
          echo "OUT_DIR=${OUT_DIR}"
          if [[ -d "${OUT_DIR}" ]]; then
            find "${OUT_DIR}" -maxdepth 2 -type f | tee -a logs/out_files.txt
            COUNT=$(find "${OUT_DIR}" -type f | wc -l)
            echo "count=${COUNT}" >> $GITHUB_OUTPUT
          else
            echo "count=0" >> $GITHUB_OUTPUT
          fi

      - name: 결과 업로드 (산출물)
        if: steps.outcheck.outputs.count != '0'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2 pin
        with:
          name: backtest-results
          path: ${{ env.OUT_DIR }}/
          if-no-files-found: warn
          retention-days: 10

      - name: 로그 업로드
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest-logs
          path: logs/**
          if-no-files-found: warn
          retention-days: 10
