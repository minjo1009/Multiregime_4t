name: 4t-backtest

on:
  workflow_dispatch:
    inputs:
      code_zip:
        description: "코드 ZIP (repo 루트) 파일명"
        default: "trend4u.zip"
        required: true
      data_zip:
        description: "데이터 ZIP (repo 루트) 파일명"
        default: "ETHUSDT_1min_2020_2025.zip"
        required: true
      train_start:
        description: "훈련 시작 YYYY-MM-DD"
        default: "2023-01-01"
        required: true
      train_end:
        description: "훈련 종료 YYYY-MM-DD"
        default: "2024-12-31"
        required: true
      test_start:
        description: "테스트 시작 YYYY-MM-DD"
        default: "2025-01-01"
        required: true
      test_end:
        description: "테스트 종료 YYYY-MM-DD"
        default: "2025-06-30"
        required: true
  push:
    paths:
      - "trend4u.zip"
      - "ETHUSDT_1min_2020_2025.zip"
      - ".github/workflows/4t-backtest.yml"

permissions:
  contents: read

env:
  TZ: Asia/Seoul
  OUT_DIR: out
  LOG_DIR: logs

jobs:
  backtest:
    runs-on: ubuntu-latest

    steps:
      # ✅ 모든 액션은 “풀 SHA”로 고정 (조직 정책 충족)
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Python 3.11
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.11"

      - name: Prepare workspace (dirs, meta)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$LOG_DIR" "$OUT_DIR"
          echo "Repo: $GITHUB_REPOSITORY" | tee -a "$LOG_DIR/meta.txt"
          echo "SHA : $GITHUB_SHA"         | tee -a "$LOG_DIR/meta.txt"
          echo "TZ  : $TZ"                 | tee -a "$LOG_DIR/meta.txt"
          python -V   | tee -a "$LOG_DIR/versions.txt"
          pip -V      | tee -a "$LOG_DIR/versions.txt"
          ls -al      | tee "$LOG_DIR/root-ls.txt"

      - name: Unzip code & data
        shell: bash
        env:
          CODE_ZIP: ${{ inputs.code_zip || 'trend4u.zip' }}
          DATA_ZIP: ${{ inputs.data_zip || 'ETHUSDT_1min_2020_2025.zip' }}
        run: |
          set -euo pipefail
          echo "CODE_ZIP=$CODE_ZIP" | tee -a "$LOG_DIR/unzip.txt"
          echo "DATA_ZIP=$DATA_ZIP" | tee -a "$LOG_DIR/unzip.txt"

          if [[ ! -f "$CODE_ZIP" ]]; then
            echo "::error::코드 zip이 루트에 없습니다: $CODE_ZIP"; exit 2
          fi
          if [[ ! -f "$DATA_ZIP" ]]; then
            echo "::error::데이터 zip이 루트에 없습니다: $DATA_ZIP"; exit 2
          fi

          # 코드 압축 해제 → ./trend4u/ (zip 내부 최상위 폴더도 trend4u/)
          unzip -o "$CODE_ZIP" -d . | tee -a "$LOG_DIR/unzip.txt"

          # 데이터 압축 해제 → ./data/ETHUSDT_1min_2020_2025.csv
          mkdir -p data
          unzip -o "$DATA_ZIP" -d data | tee -a "$LOG_DIR/unzip.txt"

          echo "== tree =="
          (command -v tree >/dev/null && tree -a -L 2 || ls -Ral) | tee "$LOG_DIR/tree.txt"

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f trend4u/requirements.txt ]]; then
            pip install --upgrade pip
            pip install -r trend4u/requirements.txt | tee -a "$LOG_DIR/pip.txt"
          else
            # 최소 구동 세트
            pip install numpy pandas scikit-learn matplotlib ta python-dateutil pytz | tee -a "$LOG_DIR/pip.txt"
          fi

      - name: Run backtest (trend4u/run_4u.py)
        shell: bash
        env:
          TRAIN_START: ${{ inputs.train_start || '2023-01-01' }}
          TRAIN_END:   ${{ inputs.train_end   || '2024-12-31' }}
          TEST_START:  ${{ inputs.test_start  || '2025-01-01' }}
          TEST_END:    ${{ inputs.test_end    || '2025-06-30' }}
        run: |
          set -euo pipefail
          CSV="data/ETHUSDT_1min_2020_2025.csv"
          if [[ ! -f "$CSV" ]]; then
            echo "::error::CSV가 없습니다: $CSV"; ls -al data; exit 3
          fi
          python trend4u/run_4u.py \
            --data "$CSV" \
            --train_start "$TRAIN_START" \
            --train_end   "$TRAIN_END" \
            --test_start  "$TEST_START" \
            --test_end    "$TEST_END" \
            --out_dir "$OUT_DIR" \
            2>&1 | tee "$LOG_DIR/run.txt"

          echo "생성물 확인:" | tee -a "$LOG_DIR/post.txt"
          ls -al "$OUT_DIR" || true | tee -a "$LOG_DIR/post.txt"

      - name: Upload results artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: backtest-results
          path: |
            ${{ env.OUT_DIR }}/**
          if-no-files-found: warn
          retention-days: 30

      - name: Upload logs artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: backtest-logs
          path: |
            ${{ env.LOG_DIR }}/**
          if-no-files-found: ignore
          retention-days: 14
