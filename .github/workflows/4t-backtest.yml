name: 4t-backtest

on:
  workflow_dispatch:

# 최소 권한
permissions:
  contents: read

# 중복 실행 방지
concurrency:
  group: backtest-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (pinned SHA, actions/checkout v5.0.0)
        # tag 사용 금지, 풀 SHA로 고정
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        # ref: v5.0.0 (Node 24 런타임, 최소 러너 v2.327.1 필요)
        # https://github.com/actions/checkout/releases/tag/v5.0.0

      - name: Setup Python 3.11 (pinned SHA, actions/setup-python v5.6.0)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        # ref: v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'   # 별도 actions/cache 없이 pip 캐싱

      - name: Unpack code & data
        shell: bash
        run: |
          set -euxo pipefail
          # 코드팩
          [ -f trend4u.zip ] && unzip -o trend4u.zip -d trend4u
          # 데이터: zip 우선, 없으면 csv 탐색
          mkdir -p data
          if ls -1 *.zip 2>/dev/null | grep -Ei 'ETH.*(1m|1min).*\.zip$' >/dev/null; then
            z=$(ls -1 | grep -Ei 'ETH.*(1m|1min).*\.zip$' | head -n1)
            unzip -o "$z" -d data
          elif ls -1 *.csv 2>/dev/null | grep -Ei 'ETH.*(1m|1min).*\.csv$' >/dev/null; then
            cp "$(ls -1 | grep -Ei 'ETH.*(1m|1min).*\.csv$' | head -n1)" data/
          fi
          echo "== repo root =="
          ls -al
          echo "== trend4u =="
          [ -d trend4u ] && ls -al trend4u || true
          echo "== data =="
          ls -al data

      - name: Install dependencies
        shell: bash
        run: |
          set -euxo pipefail
          if [ -f trend4u/requirements.txt ]; then
            pip install --upgrade pip
            pip install -r trend4u/requirements.txt
          else
            # 최소 실행용 기본 패키지(필요시 requirements.txt로 대체)
            pip install numpy pandas matplotlib
          fi

      - name: Run backtest
        shell: bash
        run: |
          set -euxo pipefail
          cd trend4u || true
          # 가장 그럴듯한 실행 스크립트 자동 탐색
          script=$(ls -1 | grep -Ei '(^|_)backtest.*\.py$|^run_?backtest.*\.py$' | head -n1 || true)
          if [ -n "${script:-}" ]; then
            echo ">> running ${script}"
            # 데이터 인자 유무에 따라 유연 실행
            python "$script" --data ../data  --symbol ETHUSDT --tf 1m --out ../out || \
            python "$script" --data ../data  || \
            python "$script"
          elif [ -f Makefile ]; then
            make backtest || make
          else
            echo "::warning file=trend4u::백테스트 실행 스크립트를 찾지 못했습니다. 파일 목록을 확인하세요."
            ls -al
          fi

      - name: Collect artifacts
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p out
          # 흔한 산출물 위치 모으기(없으면 무시)
          [ -d trend4u/out ]    && cp -r trend4u/out/* out/    2>/dev/null || true
          [ -d trend4u/logs ]   && mkdir -p out/logs  && cp -r trend4u/logs/* out/logs/    2>/dev/null || true
          [ -d trend4u/reports ]&& mkdir -p out/reports && cp -r trend4u/reports/* out/reports/ 2>/dev/null || true
          find out -type f -maxdepth 3 -printf '%P\n' || true

      - name: Upload results (pinned SHA, upload-artifact v4.6.2)
        # v4는 같은 이름으로 여러 번 업로드 불가 → 이 스텝 단일 업로드 유지
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        # ref: v4.6.2
        with:
          name: backtest-${{ github.run_number }}
          path: |
            out/**
          if-no-files-found: warn
          retention-days: 14
