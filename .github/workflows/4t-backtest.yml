name: 4t-backtest

on:
  workflow_dispatch:
    inputs:
      train_start:
        description: "Train start (YYYY-MM-DD)"
        required: true
        default: "2025-01-01"
      train_end:
        description: "Train end (YYYY-MM-DD)"
        required: true
        default: "2025-04-30"
      test_start:
        description: "Test start (YYYY-MM-DD)"
        required: true
        default: "2025-05-01"
      test_end:
        description: "Test end (YYYY-MM-DD)"
        required: true
        default: "2025-06-30"
      H:
        description: "Horizon (int)"
        required: true
        default: "5"
      fee_bps:
        description: "Fee in bps"
        required: true
        default: "1.0"
      cov_low:
        description: "Coverage lower bound"
        required: true
        default: "0.2"
      cov_high:
        description: "Coverage upper bound"
        required: true
        default: "0.4"

jobs:
  backtest:
    runs-on: ubuntu-latest
    # setup-python을 안 쓰고 컨테이너로 Python 환경 확보 → 액션 SHA 핀을 줄여 보안/안정성↑
    container:
      image: python:3.11-slim

    steps:
      # actions/checkout@v4 (전체 SHA 고정)
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Show repo root
        run: |
          set -euo pipefail
          pwd
          ls -al

      - name: Prepare code & data (unzip via Python; CSV/ZIP 모두 대응)
        shell: bash
        run: |
          set -euo pipefail

          CODE_ZIP="trend4t_fix_full.zip"
          DATA_CSV="ETHUSDT_1min_2020_2025.csv"
          DATA_ZIP="ETHUSDT_1min_2020_2025.zip"

          python - << 'PY'
          import os, sys, zipfile, glob, shutil, json

          def ensure_file(path):
            if not os.path.isfile(path):
              print(f"❌ missing: {path}")
              sys.exit(3)

          root = os.getcwd()
          code_zip = os.environ.get("CODE_ZIP","trend4t_fix_full.zip")
          data_csv = os.environ.get("DATA_CSV","ETHUSDT_1min_2020_2025.csv")
          data_zip = os.environ.get("DATA_ZIP","ETHUSDT_1min_2020_2025.zip")

          # 1) 코드팩 확인 및 해제
          ensure_file(code_zip)
          with zipfile.ZipFile(code_zip) as zf:
            zf.extractall(root)

          # 2) 데이터 준비: CSV 우선, 없으면 ZIP 해제→ data/ 폴더로 정리
          data_dir = os.path.join(root, "data")
          os.makedirs(data_dir, exist_ok=True)

          if os.path.isfile(data_csv):
            # 루트에 있으면 data/로 이동(복사)하여 경로 통일
            shutil.copy2(data_csv, os.path.join(data_dir, os.path.basename(data_csv)))
          elif os.path.isfile(data_zip):
            with zipfile.ZipFile(data_zip) as zf:
              zf.extractall(data_dir)
          else:
            print("❌ Data CSV not found: tried ETHUSDT_1min_2020_2025.csv and ETHUSDT_1min_2020_2025.zip")
            sys.exit(3)

          # 3) CSV가 data/ 아래 존재하는지 최종 확인 (zip풀린 경로도 커버)
          csv_candidates = []
          for p in glob.glob(os.path.join(data_dir, "**", "*.csv"), recursive=True):
            if "ETHUSDT_1min_2020_2025" in os.path.basename(p):
              csv_candidates.append(p)
          if not csv_candidates:
            # 그냥 data/ 아래 첫 csv라도 사용
            csv_candidates = glob.glob(os.path.join(data_dir, "*.csv"))
          if not csv_candidates:
            print("❌ No CSV in data/ after extraction")
            sys.exit(3)

          # 표준 경로를 data/ETHUSDT_1min_2020_2025.csv 로 통일
          target = os.path.join(data_dir, "ETHUSDT_1min_2020_2025.csv")
          if not os.path.isfile(target):
            shutil.copy2(csv_candidates[0], target)

          # 4) 산출물 폴더
          os.makedirs(os.path.join(root, "_out_4t", "github", "logs"), exist_ok=True)

          print("✅ Prepared:")
          print(" - code unzipped to repo root")
          print(" - data at:", target)
          PY

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          # requirements.txt가 코드팩 안에 있을 수도 있으니 탐색
          REQ=$(python - << 'PY'
import os,glob
cands = glob.glob("**/requirements*.txt", recursive=True)
print(cands[0] if cands else "")
PY
)
          if [ -n "$REQ" ]; then
            echo "Using requirements: $REQ"
            pip install -r "$REQ"
          fi
          # 누락 방지용 필수 설치(중복 설치 허용)
          pip install numpy pandas scikit-learn lightgbm xgboost ta statsmodels joblib matplotlib

      - name: Backtest (run_4t.py)
        env:
          TRAIN_START: ${{ inputs.train_start }}
          TRAIN_END:   ${{ inputs.train_end }}
          TEST_START:  ${{ inputs.test_start }}
          TEST_END:    ${{ inputs.test_end }}
          H:           ${{ inputs.H }}
          FEE_BPS:     ${{ inputs.fee_bps }}
          COV_LOW:     ${{ inputs.cov_low }}
          COV_HIGH:    ${{ inputs.cov_high }}
        run: |
          set -euo pipefail

          # run_4t.py가 루트 또는 압축 해제 경로에 존재한다고 가정 (코드팩 구조 그대로)
          # 데이터는 data/ETHUSDT_1min_2020_2025.csv 로 표준화됨
          echo "▶ Running backtest..."
          python run_4t.py \
            --data ./data/ETHUSDT_1min_2020_2025.csv \
            --train_start "${TRAIN_START}" --train_end "${TRAIN_END}" \
            --test_start  "${TEST_START}"  --test_end  "${TEST_END}" \
            --H ${H} --fee_bps ${FEE_BPS} --cov_low ${COV_LOW} --cov_high ${COV_HIGH} \
            --out_dir ./_out_4t/github | tee ./_out_4t/github/logs/console.txt

          echo "──────── summary glimpse ────────"
          python - << 'PY'
import json, re, sys, pathlib, glob
paths = glob.glob("_out_4t/github/**/train_test_summary*.json", recursive=True)
if not paths:
  print("⚠️  No summary json found yet.")
else:
  p = paths[0]
  print("Found summary:", p)
  try:
    print(json.dumps(json.load(open(p,"r",encoding="utf-8")), indent=2))
  except Exception as e:
    print("read summary error:", e)
PY

      # actions/upload-artifact@v4 (전체 SHA 고정)
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: 4t_results_${{ github.run_id }}
          path: |
            _out_4t/github/**
            **/train_test_summary*.json
            **/logs/**
          if-no-files-found: warn
