name: ETH 1m Backtest

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: "Python version"
        required: true
        default: "3.11"
      data_zip_glob:
        description: "Data zip glob in repo root (comma-separated)"
        required: false
        default: "ETHUSDT_1min_2020_2025.zip"
      strat_zip_glob:
        description: "Strategy zip glob in repo root (comma-separated)"
        required: false
        default: "*.zip"
  push:
    branches: [ "main" ]

permissions:
  contents: read

env:
  TZ: Asia/Seoul
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"

jobs:
  backtest:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        # ref: https://github.com/actions/checkout/commit/08c6903... :contentReference[oaicite:5]{index=5}

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ github.event.inputs.python_version || '3.11' }}
          cache: 'pip'
        # ref: https://github.com/actions/setup-python/commit/a26af69... :contentReference[oaicite:6]{index=6}

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip

      - name: Install Python deps
        run: |
          python -m pip install -U pip wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # 최소 런타임(수정 가능)
            pip install pandas numpy matplotlib backtrader ta
          fi

      - name: Prepare workspace folders
        run: |
          mkdir -p data strategies results logs

      - name: Unzip data & strategy archives from repo root
        shell: bash
        run: |
          IFS=',' read -ra DATA_GLOBS <<< "${{ github.event.inputs.data_zip_glob || 'ETHUSDT_1min_2020_2025.zip' }}"
          IFS=',' read -ra STRAT_GLOBS <<< "${{ github.event.inputs.strat_zip_glob || '*.zip' }}"

          # 데이터 ZIP 해제 -> data/
          for g in "${DATA_GLOBS[@]}"; do
            for z in $g; do
              [[ -f "$z" ]] || continue
              echo "Unzipping data: $z"
              unzip -o "$z" -d data/
            done
          done

          # 전략 ZIP 해제 -> strategies/
          for g in "${STRAT_GLOBS[@]}"; do
            for z in $g; do
              [[ -f "$z" ]] || continue
              # 데이터 zip과 중복 unzip 방지: 데이터 파일명 heuristic
              if echo "$z" | grep -qiE '(ETHUSDT|BTCUSDT|_1m|minute|data)'; then
                echo "Skip strategy unzip for data-like file: $z"
                continue
              fi
              echo "Unzipping strategy: $z"
              unzip -o "$z" -d strategies/
            done
          done

      - name: Build backtest command
        id: cmd
        run: |
          # 아래 스크립트/엔트리포인트는 레포 구조에 맞게 변경 가능
          # 우선 순위: repo 루트의 scripts/backtest.py > strategies/backtest.py
          ENTRY=""
          if [ -f scripts/backtest.py ]; then
            ENTRY="scripts/backtest.py"
          elif [ -f strategies/backtest.py ]; then
            ENTRY="strategies/backtest.py"
          else
            # 예시 백테스트 러너(없으면 실패 대신 메시지)
            echo "❌ backtest.py가 없습니다. strategies/ 내부에 backtest.py를 두거나 scripts/backtest.py를 추가하세요."
            echo "예: python strategies/backtest.py --data-dir data --results-dir results --logs-dir logs --symbol ETHUSDT --timeframe 1m"
            exit 1
          fi

          echo "entry=$ENTRY" >> "$GITHUB_OUTPUT"

      - name: Run backtest
        run: |
          set -e
          python "${{ steps.cmd.outputs.entry }}" \
            --data-dir data \
            --results-dir results \
            --logs-dir logs \
            --symbol ETHUSDT \
            --timeframe 1m

      - name: Cache raw data (optional)
        id: cache-data
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            data
          key: ${{ runner.os }}-ethusdt-1m-${{ hashFiles('data/**') }}
        # ref: https://github.com/actions/cache/commit/0400d5f... :contentReference[oaicite:7]{index=7}

      - name: Upload results artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: backtest-results-${{ github.run_id }}
          path: |
            results/**
            logs/**
          if-no-files-found: warn
        # ref: https://github.com/actions/upload-artifact/commit/ea165f8... :contentReference[oaicite:8]{index=8}
