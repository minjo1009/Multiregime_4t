name: Backtest

on:
  workflow_dispatch:
    inputs:
      TRADE_ZIP:
        description: "Code zip at repo root (e.g., trade_v1.0.7.zip)"
        required: true
        type: string
      DATA_ZIP:
        description: "Data zip at repo root (e.g., ETHUSDT_1min_2020_2025.zip)"
        required: true
        type: string
      CSV_GLOB:
        description: "CSV glob inside DATA_ZIP after unzip (e.g., *ETHUSDT*1min*2020*2025*.csv)"
        required: true
        type: string
      PYVER:
        description: "Python version"
        required: false
        default: "3.11"
        type: string

jobs:
  run-backtest:
    runs-on: ubuntu-latest
    env:
      RUN_DIR: tmp/trade
      DATA_DIR: tmp/data
      OUT_DIR: _out_4u/run
    steps:
      # ----- Checkout (pinned SHA: actions/checkout v4) -----
      - name: Checkout (pinned)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      # ----- Prepare workspace & unzip code/data -----
      - name: Prepare and unzip
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "${RUN_DIR}" "${DATA_DIR}" "${OUT_DIR}"

          # Validate zips exist at repo root
          test -f "${{ inputs.TRADE_ZIP }}" || { echo "❌ code zip not found: ${{ inputs.TRADE_ZIP }}"; exit 1; }
          test -f "${{ inputs.DATA_ZIP }}" || { echo "❌ data zip not found: ${{ inputs.DATA_ZIP }}"; exit 1; }

          unzip -q "${{ inputs.TRADE_ZIP }}" -d "${RUN_DIR}"
          unzip -q "${{ inputs.DATA_ZIP }}" -d "${DATA_DIR}"

          # Detect CSV
          CSV_PATH="$(ls ${DATA_DIR}/${{ inputs.CSV_GLOB }} 2>/dev/null | head -n 1 || true)"
          if [ -z "${CSV_PATH}" ]; then
            echo "❌ No CSV found in ${DATA_DIR} with glob: ${{ inputs.CSV_GLOB }}"
            exit 1
          fi
          echo "Using CSV_PATH=${CSV_PATH}"
          echo "CSV_PATH=${CSV_PATH}" >> "${GITHUB_ENV}"

      # ----- Setup Python (pinned SHA: actions/setup-python v5) -----
      - name: Setup Python (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.PYVER }}
          cache: pip
          check-latest: false

      # ----- Optional dependency install (only if present) -----
      - name: Install Python deps (optional)
        shell: bash
        working-directory: ${{ env.RUN_DIR }}
        run: |
          set -euo pipefail
          python3 -m pip -q install -U pip
          if [ -f requirements.txt ]; then
            echo "Installing requirements.txt ..."
            pip -q install -r requirements.txt
          else
            echo "No requirements.txt; skipping pip install."
          fi

      # ----- Preflight CSV schema -----
      - name: Preflight CSV schema
        shell: bash
        run: |
          set -euo pipefail
          python3 - <<'PY'
          import os, sys, pandas as pd
          p = os.environ.get("CSV_PATH")
          if not p:
              print("❌ CSV_PATH missing from env"); sys.exit(1)
          try:
              df = pd.read_csv(p, nrows=2)
          except Exception as e:
              print(f"❌ CSV read failed: {e}"); sys.exit(1)
          need = {'open_time','open','high','low','close','volume'}
          miss = sorted(need - set(df.columns))
          if miss:
              print("❌ Missing base columns:", miss); sys.exit(1)
          print("✅ Columns OK:", sorted(df.columns))
          PY

      # ----- Run backtest -----
      - name: Run backtest
        shell: bash
        working-directory: ${{ env.RUN_DIR }}
        run: |
          set -euo pipefail
          python3 run_4u.py --data_path "${CSV_PATH}" --out_dir "${OUT_DIR}"
          echo "---- gating debug (head) ----" || true
          head -n 60 "${OUT_DIR}/gating_debug.json" || true
          ls -al "${OUT_DIR}" || true

      # ----- Upload artifacts (pinned SHA: upload-artifact v4) -----
      - name: Upload artifacts (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest-output
          path: |
            _out_4u/run/summary.json
            _out_4u/run/gating_debug.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
          if-no-files-found: warn
