name: Backtest
on:
  workflow_dispatch:
    inputs:
      trade_zip:
        description: Code ZIP at repo root
        required: false
        default: trade_v1.0.6_override.zip
      data_zip:
        description: Data ZIP at repo root
        required: false
        default: ETHUSDT_1min_2020_2025.zip
      csv_glob:
        description: CSV glob inside data dir
        required: false
        default: "*ETHUSDT*1min*202*.csv"
      out_dir:
        description: Output directory
        required: false
        default: _out_4u/run

jobs:
  run-backtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve inputs
        run: |
          echo "TRADE_ZIP=${{ inputs.trade_zip }}" >> $GITHUB_ENV
          echo "DATA_ZIP=${{ inputs.data_zip }}" >> $GITHUB_ENV
          echo "CSV_GLOB=${{ inputs.csv_glob }}" >> $GITHUB_ENV
          echo "OUT_DIR=${{ inputs.out_dir }}" >> $GITHUB_ENV

      - name: Prepare (unzip)
        shell: bash
        run: |
          set -euo pipefail
          : "${TRADE_ZIP:=trade_v1.0.6_override.zip}"
          : "${DATA_ZIP:=ETHUSDT_1min_2020_2025.zip}"
          : "${CSV_GLOB:=*ETHUSDT*1min*202*.csv}"
          : "${OUT_DIR:=_out_4u/run}"

          mkdir -p tmp/trade tmp/data "$OUT_DIR"
          test -f "$TRADE_ZIP" || { echo "❌ missing $TRADE_ZIP"; exit 1; }
          test -f "$DATA_ZIP"  || { echo "❌ missing $DATA_ZIP"; exit 1; }

          unzip -q "$TRADE_ZIP" -d tmp/trade
          unzip -q "$DATA_ZIP"  -d tmp/data

          echo "[data sample]"
          find tmp/data -type f -name "*.csv" | head -n 5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install requirements
        working-directory: tmp/trade
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          python - <<'PY'
          import sklearn, sys
          print("sklearn", sklearn.__version__)
          PY

      - name: Detect CSV
        shell: bash
        run: |
          set -euo pipefail
          cand=$(find tmp/data -type f -iname "$CSV_GLOB" | head -n1 || true)
          [ -n "$cand" ] || cand=$(find tmp/data -type f -iname "*.csv" | head -n1 || true)
          [ -n "$cand" ] || { echo "❌ No CSV found under tmp/data"; exit 1; }
          echo "CSV_PATH=$cand" >> $GITHUB_ENV
          echo "Using CSV_PATH=$cand"

      - name: Run backtest
        working-directory: tmp/trade
        run: |
          set -euo pipefail
          python run_4u.py --data_path "$CSV_PATH" --config "conf/config.yml" --out_dir "$GITHUB_WORKSPACE/$OUT_DIR"
          echo "---- outputs ----"
          ls -al "$GITHUB_WORKSPACE/$OUT_DIR"
          echo "---- summary head ----"
          head -n 80 "$GITHUB_WORKSPACE/$OUT_DIR/summary.json" || true
          echo "---- gating_debug head ----"
          head -n 80 "$GITHUB_WORKSPACE/$OUT_DIR/gating_debug.json" || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backtest-output
          path: |
            _out_4u/run/summary.json
            _out_4u/run/gating_debug.json
            _out_4u/run/trades.csv
            _out_4u/run/preds_test.csv
          if-no-files-found: error
          retention-days: 30