name: backtest

on:
  workflow_dispatch:
    inputs:
      trade_zip_path:
        description: "Path to trade code zip (in repo)"
        required: true
        default: "trade_v1.0.1.zip"
      data_zip_path:
        description: "Path to 1m data zip (in repo)"
        required: true
        default: "ETHUSDT_1min_2020_2025.zip"
      out_dir:
        description: "Output dir"
        required: false
        default: "_out_4u/run"
  push:
    branches: [ main ]
    paths:
      - "**/*.zip"
      - ".github/workflows/backtest.yml"

permissions:
  contents: read

concurrency:
  group: backtest-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-backtest:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      TRADE_ZIP: ${{ github.event.inputs.trade_zip_path || 'trade_v1.0.1.zip' }}
      DATA_ZIP:  ${{ github.event.inputs.data_zip_path  || 'ETHUSDT_1min_2020_2025.zip' }}
      OUT_DIR:   ${{ github.event.inputs.out_dir        || '_out_4u/run' }}

    steps:
      # 모든 액션은 commit SHA로 고정 (조직 정책 충족)
      - name: Checkout (pinned SHA)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Ensure unzip
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip

      - name: Show repo listing
        run: ls -alh

      # --- unzip trade code & locate run_4u.py ---
      - name: Unzip trade pack
        shell: bash
        run: |
          set -euo pipefail
          test -f "$TRADE_ZIP" || { echo "❌ Trade zip not found: $TRADE_ZIP"; exit 1; }
          mkdir -p tmp/trade
          unzip -q -o "$TRADE_ZIP" -d tmp/trade

          RUN_FILE="$(find tmp/trade -type f -name 'run_4u.py' -print -quit || true)"
          [ -n "$RUN_FILE" ] || { echo "❌ run_4u.py not found inside $TRADE_ZIP"; exit 1; }
          RUN_DIR="$(dirname "$RUN_FILE")"
          echo "RUN_DIR=$RUN_DIR" >> "$GITHUB_ENV"

          REQS_FILE="$(find "$RUN_DIR" -maxdepth 1 -type f -name 'requirements.txt' -print -quit || true)"
          [ -n "$REQS_FILE" ] && echo "REQS_FILE=$REQS_FILE" >> "$GITHUB_ENV" || true
          echo "ℹ️ RUN_DIR=$RUN_DIR"

      # --- unzip data & locate CSV (ETH 1m 우선) ---
      - name: Unzip data pack
        shell: bash
        run: |
          set -euo pipefail
          test -f "$DATA_ZIP" || { echo "❌ Data zip not found: $DATA_ZIP"; exit 1; }
          mkdir -p tmp/data
          unzip -q -o "$DATA_ZIP" -d tmp/data

          CSV_PATH="$(find tmp/data -type f -iname '*ETH*1min*.csv' -print -quit)"
          if [ -z "$CSV_PATH" ]; then
            CSV_PATH="$(find tmp/data -type f -iname '*.csv' -print -quit)"
          fi
          [ -n "$CSV_PATH" ] || { echo "❌ No CSV found in $DATA_ZIP"; exit 1; }
          echo "CSV_PATH=$CSV_PATH" >> "$GITHUB_ENV"
          echo "ℹ️ CSV_PATH=$CSV_PATH"
          head -n 3 "$CSV_PATH" || true

      - name: Set up Python (pinned SHA)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -n "${REQS_FILE:-}" ] && [ -f "$REQS_FILE" ]; then
            pip install -r "$REQS_FILE"
          else
            pip install numpy pandas scikit-learn matplotlib pyyaml
          fi

      # Preflight는 코드팩 v1.0.1에서 처리(quote→base 자동 변환)
      # heredoc 사용 없음 → YAML 파싱 에러 원천 차단

      - name: Run backtest
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$OUT_DIR"
          echo "▶ python $RUN_DIR/run_4u.py --data_path \"$CSV_PATH\" --out_dir \"$OUT_DIR\""
          python "$RUN_DIR/run_4u.py" --data_path "$CSV_PATH" --out_dir "$OUT_DIR"

      - name: Verify outputs
        shell: bash
        run: |
          test -f "$OUT_DIR/summary.json" || { echo "❌ summary.json not found in $OUT_DIR"; exit 1; }
          echo "==== SUMMARY (first 2000 chars) ===="
          head -c 2000 "$OUT_DIR/summary.json" || true
          echo ""

      - name: Upload artifacts (pinned SHA)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backtest-output
          path: |
            ${{ env.OUT_DIR }}/summary.json
            ${{ env.OUT_DIR }}/charts/
          if-no-files-found: warn
          retention-days: 30