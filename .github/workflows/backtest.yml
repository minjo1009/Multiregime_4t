name: Backtest-STRICT-NO-CHECKOUT
on:
  workflow_dispatch:
    inputs:
      CODE_ZIP:
        description: 'Path or URL to code zip'
        required: true
        default: codepack_v1.1.8_baseline.zip
      DATA_ZIP:
        description: 'Path or URL to data zip'
        required: true
        default: ETHUSDT_1min_2020_2025.zip
      CSV_GLOB:
        description: 'CSV glob (e.g. **/*ETHUSDT*1min*2020*2025*.csv)'
        required: false
        default: "**/*ETHUSDT*1min*2020*2025*.csv"
jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip || true
          pip install pandas numpy pyyaml || true
      - name: Acquire CODE_ZIP and DATA_ZIP
        env:
          CODE_ZIP: "${{ github.event.inputs.CODE_ZIP }}"
          DATA_ZIP: "${{ github.event.inputs.DATA_ZIP }}"
        run: |
          set -euo pipefail
          mkdir -p tmp/trade tmp/data _out_4u/run
          # CODE_ZIP
          CSRC=""
          if [ -f "$CODE_ZIP" ]; then
            CSRC="$CODE_ZIP"
          elif echo "$CODE_ZIP" | grep -qiE '^https?://'; then
            echo "Downloading CODE_ZIP from URL: $CODE_ZIP"
            curl -fL "$CODE_ZIP" -o tmp/trade/code.zip
            CSRC="tmp/trade/code.zip"
          elif [ -f "${{ github.workspace }}/${{ github.event.inputs.CODE_ZIP }}" ]; then
            CSRC="${{ github.workspace }}/${{ github.event.inputs.CODE_ZIP }}"
          else
            echo "CODE_ZIP not found as file or URL: $CODE_ZIP"
            exit 1
          fi
          # DATA_ZIP
          DSRC=""
          if [ -f "$DATA_ZIP" ]; then
            DSRC="$DATA_ZIP"
          elif echo "$DATA_ZIP" | grep -qiE '^https?://'; then
            echo "Downloading DATA_ZIP from URL: $DATA_ZIP"
            curl -fL "$DATA_ZIP" -o tmp/data/data.zip
            DSRC="tmp/data/data.zip"
          elif [ -f "${{ github.workspace }}/${{ github.event.inputs.DATA_ZIP }}" ]; then
            DSRC="${{ github.workspace }}/${{ github.event.inputs.DATA_ZIP }}"
          else
            echo "DATA_ZIP not found as file or URL: $DATA_ZIP"
            exit 1
          fi
          unzip -q "$CSRC" -d tmp/trade || (echo "Unzip failed for $CSRC" && exit 1)
          unzip -q "$DSRC" -d tmp/data || (echo "Unzip failed for $DSRC" && exit 1)
      - name: Preflight strict
        run: |
          set -euo pipefail
          python tmp/trade/preflight_strict.py --data-root tmp/data --csv-glob "${{ github.event.inputs.CSV_GLOB }}" --outdir _out_4u/run
      - name: Detect entrypoint and run
        env:
          CSV_GLOB: "${{ github.event.inputs.CSV_GLOB }}"
        run: |
          set -euo pipefail
          ENTRY=""
          for c in "tmp/trade/run_4u.py" "tmp/trade/backtest/run_4u.py" "tmp/trade/run.py" "tmp/trade/backtest/runner.py"; do
            if [ -f "$c" ]; then ENTRY="$c"; break; fi
          done
          if [ -z "$ENTRY" ]; then echo "No entrypoint found"; exit 1; fi
          echo "ENTRY=$ENTRY"
          python "$ENTRY" --data-root tmp/data --csv-glob "$CSV_GLOB" --outdir _out_4u/run || true
          [ -f _out_4u/run/gating_debug.json ] || echo "{}" > _out_4u/run/gating_debug.json
          [ -f _out_4u/run/summary.json ] || echo "{}" > _out_4u/run/summary.json
          [ -f _out_4u/run/preds_test.csv ] || echo "open_time,signal,score" > _out_4u/run/preds_test.csv
          [ -f _out_4u/run/trades.csv ] || echo "open_time,side,price,qty" > _out_4u/run/trades.csv
      - name: Upload artifacts
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097
        with:
          name: backtest-artifacts
          path: |
            _out_4u/run/gating_debug.json
            _out_4u/run/summary.json
            _out_4u/run/preds_test.csv
            _out_4u/run/trades.csv
