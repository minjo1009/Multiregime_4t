name: 4t-backtest

on:
  workflow_dispatch:
    inputs:
      train_start: { description: "Train start", default: "2025-01-01" }
      train_end:   { description: "Train end",   default: "2025-04-30" }
      test_start:  { description: "Test start",  default: "2025-05-01" }
      test_end:    { description: "Test end",    default: "2025-06-30" }
      H:           { description: "H horizon",   default: "5" }
      fee_bps:     { description: "Fee (bps)",   default: "1.0" }
      cov_low:     { description: "Coverage low", default: "0.20" }
      cov_high:    { description: "Coverage high", default: "0.40" }

jobs:
  run:
    runs-on: ubuntu-24.04
    steps:
      # 1) 체크아웃 (SHA 고정)
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.1.6
        # 참고: 이 SHA는 actions/checkout v4 태그의 커밋. 

      # 2) Python 설치 (SHA 고정)
      - name: Setup Python 3.11
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.11'

      # 3) 의존성
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -q numpy pandas==2.2.* scikit-learn==1.4.* scipy ta joblib tqdm

      # 4) 데이터/코드 ZIP 해제 (레포 루트에 업로드된 zip 가정)
      - name: Prepare workspace
        run: |
          mkdir -p data trend4p
          # 코드팩
          if [ -f "4t_hotfix_pack.zip" ]; then
            unzip -o 4t_hotfix_pack.zip
          fi
          # 데이터 (CSV가 zip에 들어있다고 가정)
          if [ -f "ETHUSDT_1min_2020_2025.zip" ]; then
            unzip -o ETHUSDT_1min_2020_2025.zip -d data
          fi
          ls -al
          ls -al data || true
          # pandas 경고 대응: infer_datetime_format 제거되어도 동작하도록 코드가 있어야 함

      # 5) 백테스트 실행
      - name: Run 4t backtest
        env:
          TRAIN_S: ${{ github.event.inputs.train_start }}
          TRAIN_E: ${{ github.event.inputs.train_end }}
          TEST_S:  ${{ github.event.inputs.test_start }}
          TEST_E:  ${{ github.event.inputs.test_end }}
          H:       ${{ github.event.inputs.H }}
          FEE:     ${{ github.event.inputs.fee_bps }}
          COV_L:   ${{ github.event.inputs.cov_low }}
          COV_H:   ${{ github.event.inputs.cov_high }}
        run: |
          mkdir -p _out_4t/ci
          python ./run_4t.py \
            --data ./data/ETHUSDT_1min_2020_2025.csv \
            --train_start "${TRAIN_S}" --train_end "${TRAIN_E}" \
            --test_start  "${TEST_S}"  --test_end  "${TEST_E}" \
            --H ${H} --fee_bps ${FEE} --cov_low ${COV_L} --cov_high ${COV_H} \
            --out_dir ./_out_4t/ci \
            | tee _out_4t/ci/console.jsonl

      # 6) 결과 아티팩트 업로드 (SHA 고정)
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: results-${{ github.run_id }}
          path: |
            _out_4t/ci/**
            **/*.log
            **/*.json
            !.git/**
