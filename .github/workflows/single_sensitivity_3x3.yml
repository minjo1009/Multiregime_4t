name: Single Sensitivity 3x3 (thr±0.02 × hold±1)

on:
  workflow_dispatch:
    inputs:
      BASE_PARAMS: { default: 'conf/params_alt.yml' }
      BASE_THR:    { default: '0.83' }
      BASE_HOLD:   { default: '9' }
      CSV_GLOB:    { default: '**/*ETHUSDT*1min*2020*2025*.csv' }
      RUNNER_PATH: { default: '' }
      PY_VERSION:  { default: '3.10' }

env: { PYTHONUTF8: '1' }

jobs:
  sweep:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        thr: ['0.81','0.83','0.85']
        hold: ['8','9','10']
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with: { python-version: ${{ github.event.inputs.PY_VERSION }} }
      - name: Deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install "numpy==1.26.4" "pandas==2.2.2" "numba==0.59.1" "llvmlite==0.42.0" "pyyaml"
      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=.:${{ github.workspace }}/src" >> $GITHUB_ENV
      - name: Build safe params for each cell
        env:
          BASE: ${{ github.event.inputs.BASE_PARAMS }}
          THR:  ${{ matrix.thr }}
          HOLD: ${{ matrix.hold }}
        run: |
          python - <<'PY'
          import os, yaml
          base=os.environ['BASE']; thr=os.environ['THR']; hold=os.environ['HOLD']
          with open(base,'r',encoding='utf-8') as f: d=yaml.safe_load(f) or {}
          d.setdefault('entry',{}).setdefault('p_thr',{})
          for k in ('trend','range'): d['entry']['p_thr'][k]=max(0.3, min(0.95, float(thr)))
          d.setdefault('exit',{}); d['exit']['min_hold']=int(hold)
          out=f"conf/params_thr{thr}_h{hold}.yml"
          os.makedirs('conf', exist_ok=True)
          yaml.safe_dump(d, open(out,'w',encoding='utf-8'), sort_keys=False, allow_unicode=True)
          print('wrote', out)
          PY
      - name: Run SINGLE
        env:
          RUNNER: ${{ github.event.inputs.RUNNER_PATH }}
          CSVG:   ${{ github.event.inputs.CSV_GLOB }}
        run: |
          OUT="out_thr${{ matrix.thr }}_h${{ matrix.hold }}"
          python ci/wfo_entry.py --params "conf/params_thr${{ matrix.thr }}_h${{ matrix.hold }}.yml" --data-root "." --csv-glob "$CSVG" --runner "$RUNNER" --outdir "$OUT"
          ( cd "$OUT" && zip -rq ../${{ github.job }}_${{ matrix.thr }}_${{ matrix.hold }}.zip . )
      - name: Upload artifact (cell)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: sweep_3x3
          path: |
            ${{ github.job }}_*.zip
