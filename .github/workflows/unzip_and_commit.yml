name: backtest-4t

on:
  workflow_dispatch:
    inputs:
      asset_name:
        description: "Release asset name (CSV or ZIP)"
        required: true
        default: "ETHUSDT_1min_2020_2025.csv"
      train_start:
        required: true
        default: "2025-01-01"
      train_end:
        required: true
        default: "2025-04-30"
      test_start:
        required: true
        default: "2025-05-01"
      test_end:
        required: true
        default: "2025-06-30"
      H:
        required: true
        default: "5"
      fee_bps:
        required: true
        default: "1.0"
      cov_low:
        required: true
        default: "0.20"
      cov_high:
        required: true
        default: "0.40"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install numpy pandas scikit-learn joblib matplotlib
          fi

      - name: Download latest release asset -> data/
        env:
          REPO: ${{ github.repository }}
          ASSET: ${{ github.event.inputs.asset_name }}
          TOKEN: ${{ github.token }}
        run: |
          mkdir -p data
          rel=$(curl -s -H "Authorization: token $TOKEN" https://api.github.com/repos/$REPO/releases/latest)
          url=$(echo "$rel" | jq -r ".assets[] | select(.name==\"$ASSET\") | .url")
          if [ -z "$url" ]; then
            echo "‚ùå Asset '$ASSET' not found in latest release."; exit 1
          fi
          curl -L -H "Authorization: token $TOKEN" -H "Accept: application/octet-stream" "$url" -o "data/$ASSET"
          ls -lh data

      - name: (Optional) Unzip if asset is zip
        run: |
          if echo "${{ github.event.inputs.asset_name }}" | grep -qi '\.zip$'; then
            sudo apt-get update && sudo apt-get install -y unzip
            unzip -o "data/${{ github.event.inputs.asset_name }}" -d data
            ls -lh data
          fi

      - name: Run 4t backtest
        run: |
          mkdir -p _out_4t
          DATA_PATH=$(echo data/*.csv | awk '{print $1}')
          echo "Using data: $DATA_PATH"
          python run_4t.py \
            --data "$DATA_PATH" \
            --train_start "${{ github.event.inputs.train_start }}" \
            --train_end   "${{ github.event.inputs.train_end }}" \
            --test_start  "${{ github.event.inputs.test_start }}"  \
            --test_end    "${{ github.event.inputs.test_end }}" \
            --H ${{ github.event.inputs.H }} \
            --fee_bps ${{ github.event.inputs.fee_bps }} \
            --cov_low  ${{ github.event.inputs.cov_low }} \
            --cov_high ${{ github.event.inputs.cov_high }} \
            | tee _out_4t/result.json

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: backtest_4t_results
          path: _out_4t
