name: Run 4u Backtest (robust unzip & flatten, cache OFF)

on:
  workflow_dispatch:
    inputs:
      data_path:
        description: "데이터 경로 (예: ETHUSDT_1min_2020_2025.csv 또는 .zip)"
        required: true
        type: string
      train_start:
        description: "학습 시작 (UTC, 'YYYY-MM-DD HH:MM:SS')"
        required: true
        default: "2025-01-01 00:00:00"
        type: string
      train_end:
        description: "학습 종료 (UTC)"
        required: true
        default: "2025-04-30 23:59:00"
        type: string
      test_start:
        description: "테스트 시작 (UTC)"
        required: true
        default: "2025-05-01 00:00:00"
        type: string
      test_end:
        description: "테스트 종료 (UTC)"
        required: true
        default: "2025-06-30 23:59:00"
        type: string
      H:
        description: "홀드 바(분)"
        required: true
        default: "15"
        type: string
      fee_bps:
        description: "수수료(bp)"
        required: true
        default: "1.0"
        type: string
      slip_bps:
        description: "슬리피지(bp)"
        required: true
        default: "0.5"
        type: string
      out_dir:
        description: "출력 디렉토리"
        required: true
        default: "_out_4u"
        type: string
      python_version:
        description: "Python 버전"
        required: true
        default: "3.11"
        type: string

jobs:
  backtest:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout (pinned full SHA)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Python (cache OFF, pinned full SHA)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install deps (pandas/numpy + safety extras)
        run: |
          set -euo pipefail
          python -m pip install -U pip
          # 필수
          pip install "pandas>=2.0" "numpy>=1.24"
          # 안전장치(필요 없으면 그냥 설치만 되고 사용 안함)
          pip install "pyarrow>=14" "scikit-learn>=1.3"

      - name: Prepare data
        shell: bash
        run: |
          set -euo pipefail
          DATA="${{ inputs.data_path }}"
          mkdir -p data
          if [[ ! -e "$DATA" ]]; then
            echo "::error::data_path '$DATA' not found in repo root"; exit 1
          fi
          if [[ "$DATA" == *.zip ]]; then
            unzip -o -q "$DATA" -d data
          else
            cp -f "$DATA" data/
          fi
          echo "Using CSV:"
          ls -1 data/*.csv | head -n1

      - name: Locate strategy runner (robust unzip & flatten)
        id: findscript
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob dotglob

          # 깨끗하게 시작
          rm -rf __extracted trade4v_tmp || true
          mkdir -p __extracted

          # 루트의 trade4v/trend4u 관련 ZIP을 비대화형으로 해제(-o)
          mapfile -t ZIPS < <(ls -1 *.zip 2>/dev/null | sort -u | grep -E 'trade4v|trend4u' || true)
          echo "ZIPs: ${ZIPS[*]:-<none>}"
          for z in "${ZIPS[@]:-}"; do
            echo "Unzipping $z"
            unzip -o -q "$z" -d "__extracted/${z%.zip}"
          done

          # 평탄화: 어디에 있든 최종 ./trade4v/ 로 맞춤
          mkdir -p trade4v_tmp

          # temp 내부의 모든 'trade4v' 디렉토리 내용을 하나로 합치기
          if find __extracted -type d -name trade4v | grep -q .; then
            while IFS= read -r d; do
              echo "Merging $d -> trade4v_tmp/"
              if command -v rsync >/dev/null 2>&1; then
                rsync -a "$d/." trade4v_tmp/
              else
                cp -a "$d/." trade4v_tmp/ || true
              fi
            done < <(find __extracted -type d -name trade4v | sort)
          fi

          # 그래도 run_4u.py가 없으면, run_4u.py가 들어있는 폴더를 통째로 합침
          if [[ ! -f trade4v_tmp/run_4u.py ]]; then
            PARENT="$(dirname "$(find __extracted -type f -name 'run_4u.py' | head -n1 || true)")"
            if [[ -n "${PARENT}" && -d "${PARENT}" ]]; then
              echo "Merging runner parent ${PARENT} -> trade4v_tmp/"
              if command -v rsync >/dev/null 2>&1; then
                rsync -a "${PARENT}/." trade4v_tmp/
              else
                cp -a "${PARENT}/." trade4v_tmp/ || true
              fi
            fi
          fi

          # 리포에 이미 trade4v/가 있으면 그쪽 우선
          if [[ -d trade4v && -f trade4v/run_4u.py ]]; then
            echo "Using committed ./trade4v/"
          else
            if [[ -f trade4v_tmp/run_4u.py ]]; then
              rm -rf trade4v || true
              mv trade4v_tmp trade4v
            fi
          fi

          # 최종 검증
          if [[ ! -f trade4v/run_4u.py ]]; then
            echo "::group::Extracted tree (preview)"
            find __extracted -maxdepth 4 -print
            echo "::endgroup::"
            echo "::error::run_4u.py not found after extraction/flattening. ZIP 구조/파일명을 확인하세요."
            exit 1
          fi

          echo "SCRIPT=trade4v/run_4u.py" >> "$GITHUB_OUTPUT"
          echo "Using SCRIPT=trade4v/run_4u.py"

      - name: Run backtest (dynamic path)
        shell: bash
        run: |
          set -euo pipefail
          export PYTHONPATH="$PWD"
          PY=python
          OUT="${{ inputs.out_dir }}"
          CSV=$(ls -1 data/*.csv | head -n1)
          mkdir -p "$OUT"
          echo "Running: $PY ${{ steps.findscript.outputs.SCRIPT }}"
          $PY "${{ steps.findscript.outputs.SCRIPT }}" \
            --data "$CSV" \
            --train_start "${{ inputs.train_start }}" \
            --train_end   "${{ inputs.train_end }}" \
            --test_start  "${{ inputs.test_start }}" \
            --test_end    "${{ inputs.test_end }}" \
            --H "${{ inputs.H }}" \
            --fee_bps "${{ inputs.fee_bps }}" \
            --slip_bps "${{ inputs.slip_bps }}" \
            --out_dir "$OUT"

      - name: Show outputs
        if: always()
        run: |
          echo "=== tree of ${{ inputs.out_dir }} ==="
          find "${{ inputs.out_dir }}" -maxdepth 3 -type f -print | sed 's/^/  /'
          echo "== preview =="
          head -n 5 "${{ inputs.out_dir }}"/run/preds_test.csv || true
          tail -n 5 "${{ inputs.out_dir }}"/run/preds_test.csv || true
          echo "metrics:"
          cat "${{ inputs.out_dir }}"/run/metrics_oos.json || true

      - name: Upload artifact (pinned full SHA)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: out_4u
          path: |
            ${{ inputs.out_dir }}/run/preds_test.csv
            ${{ inputs.out_dir }}/run/metrics_oos.json
          if-no-files-found: error
          retention-days: 14
