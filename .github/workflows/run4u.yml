name: Run 4u Backtest (robust script discovery, cache OFF)

on:
  workflow_dispatch:
    inputs:
      data_path:
        description: "데이터 경로 (예: ETHUSDT_1min_2020_2025.csv 또는 .zip)"
        required: true
        type: string
      train_start:
        description: "학습 시작 (UTC, 'YYYY-MM-DD HH:MM:SS')"
        required: true
        default: "2025-01-01 00:00:00"
        type: string
      train_end:
        description: "학습 종료 (UTC)"
        required: true
        default: "2025-04-30 23:59:00"
        type: string
      test_start:
        description: "테스트 시작 (UTC)"
        required: true
        default: "2025-05-01 00:00:00"
        type: string
      test_end:
        description: "테스트 종료 (UTC)"
        required: true
        default: "2025-06-30 23:59:00"
        type: string
      H:
        description: "홀드 바(분)"
        required: true
        default: "15"
        type: string
      fee_bps:
        description: "수수료(bp)"
        required: true
        default: "1.0"
        type: string
      slip_bps:
        description: "슬리피지(bp)"
        required: true
        default: "0.5"
        type: string
      out_dir:
        description: "출력 디렉토리"
        required: true
        default: "_out_4u"
        type: string
      python_version:
        description: "Python 버전"
        required: true
        default: "3.11"
        type: string

jobs:
  backtest:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Python (cache OFF, pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install deps (minimal)
        run: |
          python -m pip install -U pip
          pip install "pandas>=2.0" "numpy>=1.24"

      - name: Prepare data
        shell: bash
        run: |
          set -euo pipefail
          DATA="${{ inputs.data_path }}"
          mkdir -p data
          if [[ ! -e "$DATA" ]]; then
            echo "::error::data_path '$DATA' not found in repo root"; exit 1
          fi
          if [[ "$DATA" == *.zip ]]; then
            unzip -q "$DATA" -d data
          else
            cp -f "$DATA" data/
          fi
          echo "Using CSV:"
          ls -1 data/*.csv | head -n1

      - name: Locate strategy runner (auto-unzip + auto-find)
        id: findscript
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          # 1) 압축 패키지 형식이면 모두 해제
          for z in trade4v*.zip trend4u*.zip *trade4v*.zip; do
            echo "Unzipping $z"
            unzip -q "$z"
          done
          # 2) 흔한 경로 우선 시도
          CANDIDATES=(
            "trade4v/run_4u.py"
            "src/trade4v/run_4u.py"
            "*/trade4v/run_4u.py"
          )
          SCRIPT=""
          for p in "${CANDIDATES[@]}"; do
            if [[ -f $p ]]; then SCRIPT="$p"; break; fi
          done
          # 3) 백업: run_4u*.py 패턴 전체 검색
          if [[ -z "${SCRIPT}" ]]; then
            SCRIPT=$(find . -maxdepth 4 -type f -name "run_4u*.py" | head -n1 || true)
          fi
          if [[ -z "${SCRIPT}" ]]; then
            echo "::group::Repo tree (maxdepth 3)"; find . -maxdepth 3 -type d -print; echo "::endgroup::"
            echo "::error::run_4u.py를 찾지 못했습니다. 루트에 trade4v/가 있는지, 또는 ZIP을 커밋했다면 파일명이 'trade4v*.zip'인지 확인하세요."
            exit 1
          fi
          echo "SCRIPT=${SCRIPT}" >> $GITHUB_OUTPUT
          echo "Using SCRIPT=${SCRIPT}"

      - name: Run backtest (dynamic path)
        shell: bash
        run: |
          set -euo pipefail
          export PYTHONPATH="$PWD"  # 내부 import 보호
          PY=python
          OUT="${{ inputs.out_dir }}"
          CSV=$(ls -1 data/*.csv | head -n1)
          mkdir -p "$OUT"
          echo "Running: $PY ${{ steps.findscript.outputs.SCRIPT }}"
          $PY "${{ steps.findscript.outputs.SCRIPT }}" \
            --data "$CSV" \
            --train_start "${{ inputs.train_start }}" \
            --train_end   "${{ inputs.train_end }}" \
            --test_start  "${{ inputs.test_start }}" \
            --test_end    "${{ inputs.test_end }}" \
            --H "${{ inputs.H }}" \
            --fee_bps "${{ inputs.fee_bps }}" \
            --slip_bps "${{ inputs.slip_bps }}" \
            --out_dir "$OUT"

      - name: Show outputs
        if: always()
        run: |
          echo "=== tree of ${{ inputs.out_dir }} ==="
          find "${{ inputs.out_dir }}" -maxdepth 3 -type f -print | sed 's/^/  /'
          echo "== preview =="
          head -n 5 "${{ inputs.out_dir }}"/run/preds_test.csv || true
          tail -n 5 "${{ inputs.out_dir }}"/run/preds_test.csv || true
          echo "metrics:"
          cat "${{ inputs.out_dir }}"/run/metrics_oos.json || true

      - name: Upload artifact (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: out_4u
          path: |
            ${{ inputs.out_dir }}/run/preds_test.csv
            ${{ inputs.out_dir }}/run/metrics_oos.json
          if-no-files-found: error
          retention-days: 14
