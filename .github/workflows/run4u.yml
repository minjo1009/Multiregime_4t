name: trade4v manual run (dispatch-only, PR-blocked)

on:
  workflow_dispatch:
    inputs:
      data_csv:   { default: 'data/*.csv', description: 'CSV 경로 또는 패턴' }
      train_start:{ default: '2025-01-01 00:00:00' }
      train_end:  { default: '2025-04-30 23:59:00' }
      test_start: { default: '2025-05-01 00:00:00' }
      test_end:   { default: '2025-06-30 23:59:00' }
      H:          { default: '15' }
      fee_bps:    { default: '1.0' }
      slip_bps:   { default: '0.5' }
      k_day:      { default: '0:10,1:15,2:30' }
      strict_qa:  { default: '0' }

jobs:
  run:
    if: ${{ github.event_name == 'workflow_dispatch' }}   # ← PR로 트리거돼도 '무조건 미실행'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab0f6f9c3f8b7497d1e5d00bbc

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with: { python-version: '3.11' }

      - name: Install deps (soft)
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install -q --upgrade pip
          pip install -q pandas pyarrow numpy scipy scikit-learn statsmodels

      - name: Unzip project (robust)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p __extracted
          if ls *.zip 1>/dev/null 2>&1; then unzip -o -q "*.zip" -d __extracted || true; fi
          ROOT=""
          for d in __extracted/trade4v __extracted ./trade4v . ; do
            if [ -f "$d/trade4v/run_4u.py" ]; then ROOT="$d/trade4v"; break; fi
            if [ -f "$d/run_4u.py" ]; then ROOT="$d"; break; fi
          done
          rm -rf trade4v || true
          if [ -n "${ROOT}" ]; then
            [ -d "${ROOT}/trade4v" ] && { mkdir -p trade4v; shopt -s dotglob; mv "${ROOT}/trade4v"/* trade4v/; } || cp -r "${ROOT}" trade4v
          fi
          [ -d trade4v/trade4v ] && { shopt -s dotglob; mv trade4v/trade4v/* trade4v/; rmdir trade4v/trade4v; } || true
          test -f trade4v/run_4u.py || { echo "FATAL: trade4v/run_4u.py not found"; exit 2; }
          ls -al trade4v | head -n 80

      - name: Prepare data
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          CSV_IN='${{ inputs.data_csv }}'
          if [[ "$CSV_IN" == *"*"* ]]; then CSV=$(ls -1 $CSV_IN 2>/dev/null | head -n1 || true); else CSV="$CSV_IN"; fi
          [ -f "$CSV" ] || { echo "FATAL: CSV not found"; exit 3; }
          echo "Using CSV: $CSV"
          python - "$CSV" <<'PY'
import pandas as pd, sys
p=sys.argv[1]; df=pd.read_csv(p)
rn={}
for k in list(df.columns):
    kl=k.strip().lower()
    if kl in ("open time","opentime","time","timestamp"): rn[k]="open_time"
    elif kl in ("open","high","low","close","volume"): rn[k]=kl
if rn: df=df.rename(columns=rn)
assert "open_time" in df.columns, "open_time missing"
df.to_csv("normalized.csv", index=False)
print("normalized.csv", len(df))
PY
          echo "csv=normalized.csv" >> $GITHUB_OUTPUT

      - name: Run backtest
        env:
          PYTHONPATH: ${{ github.workspace }}/trade4v:${{ github.workspace }}
        shell: bash
        run: |
          set -euo pipefail
          python trade4v/run_4u.py \
            --data "${{ steps.prep.outputs.csv }}" \
            --train_start "${{ inputs.train_start }}" --train_end "${{ inputs.train_end }}" \
            --test_start  "${{ inputs.test_start }}"  --test_end  "${{ inputs.test_end }}" \
            --H "${{ inputs.H }}" \
            --fee_bps "${{ inputs.fee_bps }}" --slip_bps "${{ inputs.slip_bps }}" \
            --k_day "${{ inputs.k_day }}" \
            --out_dir "_out_4u" || true
          ls -al _out_4u || true; ls -al _out_4u/run || true

      - name: Upload outputs
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with: { name: _out_4u, path: _out_4u, if-no-files-found: warn }
