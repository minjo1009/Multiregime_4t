name: Run trade4v v3 backtest

on:
  workflow_dispatch:
    inputs:
      data_path:
        description: "데이터 경로 (예: ETHUSDT_1min_2025H1.csv 또는 .zip)"
        required: true
        type: string
      train_start:
        description: "학습 시작(UTC)"
        required: true
        default: "2025-01-01 00:00:00"
        type: string
      train_end:
        description: "학습 종료(UTC)"
        required: true
        default: "2025-04-30 23:59:00"
        type: string
      test_start:
        description: "테스트 시작(UTC)"
        required: true
        default: "2025-05-01 00:00:00"
        type: string
      test_end:
        description: "테스트 종료(UTC)"
        required: true
        default: "2025-06-30 23:59:00"
        type: string
      H:
        description: "홀드 분(H)"
        required: true
        default: "15"
        type: string
      fee_bps:
        description: "수수료(bp)"
        required: true
        default: "1.0"
        type: string
      slip_bps:
        description: "슬리피지(bp)"
        required: true
        default: "0.5"
        type: string
      ev_margin_bps:
        description: "EV 마진(bp) — fee+slip 위에 추가"
        required: true
        default: "1.0"
        type: string
      K_day:
        description: "레짐별 K/일 (예: 0:5,1:10,2:20)"
        required: true
        default: "0:5,1:10,2:20"
        type: string

jobs:
  backtest:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Setup Python 3.11 (pinned)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install "pandas>=2.0" "numpy>=1.24"

      - name: Prepare data
        shell: bash
        run: |
          set -euo pipefail
          DATA="${{ inputs.data_path }}"
          mkdir -p data
          [[ -e "$DATA" ]] || { echo "::error::data_path '$DATA' not found"; exit 1; }
          if [[ "$DATA" == *.zip ]]; then unzip -o -q "$DATA" -d data; else cp -f "$DATA" data/; fi
          echo "Using CSV:"; ls -1 data/*.csv | head -n1

      - name: Prepare code (auto-detect folder or unzip *trade4v*.zip)
        id: codeprep
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob dotglob

          # 1) 커밋된 폴더 우선
          if [[ -f trade4v/run_4u.py ]]; then
            echo "SCRIPT=trade4v/run_4u.py" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [[ -f trade4v/trade4v/run_4u.py ]]; then
            echo "SCRIPT=trade4v/trade4v/run_4u.py" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 2) 루트의 *trade4v*.zip 자동 탐색 → 임시 폴더에 비대화형 해제
          rm -rf __extracted trade4v || true
          mapfile -t ZIPS < <(ls -1 *.zip 2>/dev/null | grep -i 'trade4v' || true)
          if (( ${#ZIPS[@]} == 0 )); then
            echo "::error::No trade4v code folder or trade4v*.zip found"; exit 1
          fi
          for z in "${ZIPS[@]}"; do
            echo "Unzipping $z"
            unzip -o -q "$z" -d "__extracted/${z%.zip}"
          done

          # 3) run_4u.py가 들어있는 '가장 안쪽 trade4v' 폴더를 ./trade4v 로 평탄화
          PARENT="$(dirname "$(find __extracted -type f -name 'run_4u.py' | head -n1 || true)")"
          [[ -n "$PARENT" ]] || { echo "::error::run_4u.py not found after extraction"; exit 1; }
          # 깊이 상관없이 PARENT를 trade4v로 이동
          mv "$PARENT" trade4v

          # 4) 스크립트 경로 결정
          if [[ -f trade4v/run_4u.py ]]; then
            echo "SCRIPT=trade4v/run_4u.py" >> "$GITHUB_OUTPUT"
          elif [[ -f trade4v/trade4v/run_4u.py ]]; then
            echo "SCRIPT=trade4v/trade4v/run_4u.py" >> "$GITHUB_OUTPUT"
          else
            echo "::error::run_4u.py not found in ./trade4v"; exit 1
          fi

      - name: Run backtest (v3)
        shell: bash
        run: |
          set -euo pipefail
          export PYTHONPATH="$PWD/trade4v:$PWD"
          OUT="_out_4u"
          CSV=$(ls -1 data/*.csv | head -n1)
          mkdir -p "$OUT"
          python "${{ steps.codeprep.outputs.SCRIPT }}" \
            --data "$CSV" \
            --train_start "${{ inputs.train_start }}" \
            --train_end   "${{ inputs.train_end }}" \
            --test_start  "${{ inputs.test_start }}" \
            --test_end    "${{ inputs.test_end }}" \
            --H "${{ inputs.H }}" \
            --fee_bps "${{ inputs.fee_bps }}" \
            --slip_bps "${{ inputs.slip_bps }}" \
            --ev_margin_bps "${{ inputs.ev_margin_bps }}" \
            --K_day "${{ inputs.K_day }}" \
            --out_dir "$OUT"

      - name: Show outputs (preview)
        if: always()
        run: |
          echo "== files =="; find "_out_4u" -maxdepth 3 -type f -print | sed 's/^/  /'
          echo "== run.log tail =="; tail -n 80 "_out_4u/run/run.log" || true
          echo "== metrics =="; cat "_out_4u/run/metrics_oos.json" || true
          echo "== preds head =="; head -n 5 "_out_4u/run/preds_test.csv" || true

      - name: Upload artifacts (pinned)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: out_4u_v3
          path: |
            _out_4u/run/preds_test.csv
            _out_4u/run/metrics_oos.json
            _out_4u/run/run.log
          if-no-files-found: error
          retention-days: 14
